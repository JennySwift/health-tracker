{"version":3,"sources":["time.js","timer.jquery.min.js","tooltipster.min.js","config.js","DatesRepository.js","ExercisesRepository.js","FiltersRepository.js","HelpersRepository.js","RecipesRepository.js","SharedRepository.js","TimersRepository.js","exercises/EntriesForSpecificExerciseAndDateAndUnitPopupComponent.js","exercises/ExerciseEntriesComponent.js","exercises/ExercisePopupComponent.js","exercises/ExerciseUnitsPageComponent.js","exercises/ExercisesPageComponent.js","exercises/NavbarComponent.js","exercises/NewExerciseComponent.js","exercises/NewExerciseEntryComponent.js","exercises/NewSeriesComponent.js","exercises/SeriesHistoryPopupComponent.js","exercises/SeriesPopupComponent.js","menu/FoodPopupComponent.js","menu/FoodUnitsPageComponent.js","menu/FoodsPageComponent.js","menu/MenuEntriesComponent.js","menu/NewFoodEntryComponent.js","menu/NewMenuEntryComponent.js","menu/NewQuickRecipeComponent.js","menu/RecipePopupComponent.js","menu/RecipeTagsComponent.js","menu/RecipesComponent.js","menu/RecipesPageComponent.js","menu/TemporaryRecipePopupComponent.js","shared/AutocompleteComponent.js","shared/DateNavigationComponent.js","shared/FeedbackComponent.js","shared/LoadingComponent.js","timers/ActivitiesPageComponent.js","timers/ActivityPopupComponent.js","timers/GraphsPageComponent.js","timers/NewManualTimerComponent.js","timers/NewTimerComponent.js","timers/TimerPopupComponent.js","timers/TimersPageComponent.js","EntriesPageComponent.js","JournalPageComponent.js","NewSleepEntryComponent.js","WeightComponent.js","app.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA;ACAA;AACA;ACDA;AACA;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnxSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtnGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACptQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzxHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrvrvxpzxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxnlKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrfile":"all.js","sourcesContent":["/**\r\n * Version: 1.0 Alpha-1 \r\n * Build Date: 13-Nov-2007\r\n * Copyright (c) 2006-2007, Coolite Inc. (http://www.coolite.com/). All rights reserved.\r\n * License: Licensed under The MIT License. See license.txt and http://www.datejs.com/license/. \r\n * Website: http://www.datejs.com/ or http://www.coolite.com/datejs/\r\n */\r\nTimeSpan=function(days,hours,minutes,seconds,milliseconds){this.days=0;this.hours=0;this.minutes=0;this.seconds=0;this.milliseconds=0;if(arguments.length==5){this.days=days;this.hours=hours;this.minutes=minutes;this.seconds=seconds;this.milliseconds=milliseconds;}\nelse if(arguments.length==1&&typeof days==\"number\"){var orient=(days<0)?-1:+1;this.milliseconds=Math.abs(days);this.days=Math.floor(this.milliseconds/(24*60*60*1000))*orient;this.milliseconds=this.milliseconds%(24*60*60*1000);this.hours=Math.floor(this.milliseconds/(60*60*1000))*orient;this.milliseconds=this.milliseconds%(60*60*1000);this.minutes=Math.floor(this.milliseconds/(60*1000))*orient;this.milliseconds=this.milliseconds%(60*1000);this.seconds=Math.floor(this.milliseconds/1000)*orient;this.milliseconds=this.milliseconds%1000;this.milliseconds=this.milliseconds*orient;return this;}\nelse{return null;}};TimeSpan.prototype.compare=function(timeSpan){var t1=new Date(1970,1,1,this.hours(),this.minutes(),this.seconds()),t2;if(timeSpan===null){t2=new Date(1970,1,1,0,0,0);}\nelse{t2=new Date(1970,1,1,timeSpan.hours(),timeSpan.minutes(),timeSpan.seconds());}\nreturn(t1>t2)?1:(t1<t2)?-1:0;};TimeSpan.prototype.add=function(timeSpan){return(timeSpan===null)?this:this.addSeconds(timeSpan.getTotalMilliseconds()/1000);};TimeSpan.prototype.subtract=function(timeSpan){return(timeSpan===null)?this:this.addSeconds(-timeSpan.getTotalMilliseconds()/1000);};TimeSpan.prototype.addDays=function(n){return new TimeSpan(this.getTotalMilliseconds()+(n*24*60*60*1000));};TimeSpan.prototype.addHours=function(n){return new TimeSpan(this.getTotalMilliseconds()+(n*60*60*1000));};TimeSpan.prototype.addMinutes=function(n){return new TimeSpan(this.getTotalMilliseconds()+(n*60*1000));};TimeSpan.prototype.addSeconds=function(n){return new TimeSpan(this.getTotalMilliseconds()+(n*1000));};TimeSpan.prototype.addMilliseconds=function(n){return new TimeSpan(this.getTotalMilliseconds()+n);};TimeSpan.prototype.getTotalMilliseconds=function(){return(this.days()*(24*60*60*1000))+(this.hours()*(60*60*1000))+(this.minutes()*(60*1000))+(this.seconds()*(1000));};TimeSpan.prototype.get12HourHour=function(){return((h=this.hours()%12)?h:12);};TimeSpan.prototype.getDesignator=function(){return(this.hours()<12)?Date.CultureInfo.amDesignator:Date.CultureInfo.pmDesignator;};TimeSpan.prototype.toString=function(format){function _toString(){if(this.days()!==null&&this.days()>0){return this.days()+\".\"+this.hours()+\":\"+p(this.minutes())+\":\"+p(this.seconds());}\nelse{return this.hours()+\":\"+p(this.minutes())+\":\"+p(this.seconds());}}\nfunction p(s){return(s.toString().length<2)?\"0\"+s:s;}\nvar self=this;return format?format.replace(/d|dd|HH|H|hh|h|mm|m|ss|s|tt|t/g,function(format){switch(format){case\"d\":return self.days();case\"dd\":return p(self.days());case\"H\":return self.hours();case\"HH\":return p(self.hours());case\"h\":return self.get12HourHour();case\"hh\":return p(self.get12HourHour());case\"m\":return self.minutes();case\"mm\":return p(self.minutes());case\"s\":return self.seconds();case\"ss\":return p(self.seconds());case\"t\":return((this.hours()<12)?Date.CultureInfo.amDesignator:Date.CultureInfo.pmDesignator).substring(0,1);case\"tt\":return(this.hours()<12)?Date.CultureInfo.amDesignator:Date.CultureInfo.pmDesignator;}}):this._toString();};var TimePeriod=function(years,months,days,hours,minutes,seconds,milliseconds){this.years=0;this.months=0;this.days=0;this.hours=0;this.minutes=0;this.seconds=0;this.milliseconds=0;if(arguments.length==2&&arguments[0]instanceof Date&&arguments[1]instanceof Date){var date1=years.clone();var date2=months.clone();var temp=date1.clone();var orient=(date1>date2)?-1:+1;this.years=date2.getFullYear()-date1.getFullYear();temp.addYears(this.years);if(orient==+1){if(temp>date2){if(this.years!==0){this.years--;}}}else{if(temp<date2){if(this.years!==0){this.years++;}}}\ndate1.addYears(this.years);if(orient==+1){while(date1<date2&&date1.clone().addDays(date1.getDaysInMonth())<date2){date1.addMonths(1);this.months++;}}\nelse{while(date1>date2&&date1.clone().addDays(-date1.getDaysInMonth())>date2){date1.addMonths(-1);this.months--;}}\nvar diff=date2-date1;if(diff!==0){var ts=new TimeSpan(diff);this.days=ts.days;this.hours=ts.hours;this.minutes=ts.minutes;this.seconds=ts.seconds;this.milliseconds=ts.milliseconds;}\nreturn this;}};\r\n","/*! timer.jquery 0.4.2 2015-08-04*/!function(a){function b(){p=setInterval(d,v.updateFrequency),t=!0}function c(){clearInterval(p),t=!1}function d(){s=g()-q,e(),u&&s%u===0&&(v.callback(),v.repeat||(u=v.duration=null),v.countdown&&(v.countdown=!1))}function e(){var a=s;v.countdown&&u>0&&(a=u-s),r[w](i(a)),r.data(\"seconds\",a)}function f(){r.on(\"focus\",function(){l()}),r.on(\"blur\",function(){var a,b=r[w]();b.indexOf(\"sec\")>0?s=Number(b.replace(/\\ssec/g,\"\")):b.indexOf(\"min\")>0?(b=b.replace(/\\smin/g,\"\"),a=b.split(\":\"),s=Number(60*a[0])+Number(a[1])):b.match(/\\d{1,2}:\\d{2}:\\d{2}/)&&(a=b.split(\":\"),s=Number(3600*a[0])+Number(60*a[1])+Number(a[2])),m()})}function g(){return Math.round((new Date).getTime()/1e3)}function h(a){var b,c=0,d=Math.floor(a/60);return a>=3600&&(c=Math.floor(a/3600)),a>=3600&&(d=Math.floor(a%3600/60)),10>d&&c>0&&(d=\"0\"+d),b=a%60,10>b&&(d>0||c>0)&&(b=\"0\"+b),{hours:c,minutes:d,seconds:b}}function i(a){var b=\"\",c=h(a);if(v.format){var d=[{identifier:\"%h\",value:c.hours,pad:!1},{identifier:\"%m\",value:c.minutes,pad:!1},{identifier:\"%s\",value:c.seconds,pad:!1},{identifier:\"%H\",value:parseInt(c.hours),pad:!0},{identifier:\"%M\",value:parseInt(c.minutes),pad:!0},{identifier:\"%S\",value:parseInt(c.seconds),pad:!0}];b=v.format,d.forEach(function(a){b=b.replace(new RegExp(a.identifier.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g,\"\\\\$1\"),\"g\"),a.pad&&a.value<10?\"0\"+a.value:a.value)})}else b=c.hours?c.hours+\":\"+c.minutes+\":\"+c.seconds:c.minutes?c.minutes+\":\"+c.seconds+\" min\":c.seconds+\" sec\";return b}function j(a){if(!isNaN(Number(a)))return a;var b=a.match(/\\d{1,2}h/),c=a.match(/\\d{1,2}m/),d=a.match(/\\d{1,2}s/),e=0;return a=a.toLowerCase(),b&&(e+=3600*Number(b[0].replace(\"h\",\"\"))),c&&(e+=60*Number(c[0].replace(\"m\",\"\"))),d&&(e+=Number(d[0].replace(\"s\",\"\"))),e}function k(){t||(e(),b(),r.data(\"state\",y))}function l(){t&&(c(),r.data(\"state\",z))}function m(){t||(q=g()-s,b(),r.data(\"state\",y))}function n(){q=g(),s=0,r.data(\"seconds\",s),r.data(\"state\",x),u=v.duration}function o(){c(),r.data(\"plugin_\"+B,null),r.data(\"seconds\",null),r.data(\"state\",null),r[w](\"\")}var p,q,r,s=0,t=!1,u=null,v={seconds:0,editable:!1,restart:!1,duration:null,callback:function(){alert(\"Time up!\"),c()},repeat:!1,countdown:!1,format:null,updateFrequency:1e3},w=\"html\",x=\"stopped\",y=\"running\",z=\"paused\",A=function(b,c){var d;v=a.extend(v,c),r=a(b),s=v.seconds,q=g()-s,r.data(\"seconds\",s),r.data(\"state\",x),d=r.prop(\"tagName\").toLowerCase(),(\"input\"===d||\"textarea\"===d)&&(w=\"val\"),v.duration&&(u=v.duration=j(v.duration)),v.editable&&f()};A.prototype={start:function(){k()},pause:function(){l()},resume:function(){m()},reset:function(){n()},remove:function(){o()}};var B=\"timer\";a.fn[B]=function(b){return b=b||\"start\",this.each(function(){a.data(this,\"plugin_\"+B)instanceof A||a.data(this,\"plugin_\"+B,new A(this,b));var c=a.data(this,\"plugin_\"+B);\"string\"==typeof b&&\"function\"==typeof c[b]&&c[b].call(c),\"object\"==typeof b&&c.start.call(c)})}}(jQuery);","/* Tooltipster v3.2.6 */;(function(e,t,n){function s(t,n){this.bodyOverflowX;this.callbacks={hide:[],show:[]};this.checkInterval=null;this.Content;this.$el=e(t);this.$elProxy;this.elProxyPosition;this.enabled=true;this.options=e.extend({},i,n);this.mouseIsOverProxy=false;this.namespace=\"tooltipster-\"+Math.round(Math.random()*1e5);this.Status=\"hidden\";this.timerHide=null;this.timerShow=null;this.$tooltip;this.options.iconTheme=this.options.iconTheme.replace(\".\",\"\");this.options.theme=this.options.theme.replace(\".\",\"\");this._init()}function o(t,n){var r=true;e.each(t,function(e,i){if(typeof n[e]===\"undefined\"||t[e]!==n[e]){r=false;return false}});return r}function f(){return!a&&u}function l(){var e=n.body||n.documentElement,t=e.style,r=\"transition\";if(typeof t[r]==\"string\"){return true}v=[\"Moz\",\"Webkit\",\"Khtml\",\"O\",\"ms\"],r=r.charAt(0).toUpperCase()+r.substr(1);for(var i=0;i<v.length;i++){if(typeof t[v[i]+r]==\"string\"){return true}}return false}var r=\"tooltipster\",i={animation:\"fade\",arrow:true,arrowColor:\"\",autoClose:true,content:null,contentAsHTML:false,contentCloning:true,debug:true,delay:200,minWidth:0,maxWidth:null,functionInit:function(e,t){},functionBefore:function(e,t){t()},functionReady:function(e,t){},functionAfter:function(e){},icon:\"(?)\",iconCloning:true,iconDesktop:false,iconTouch:false,iconTheme:\"tooltipster-icon\",interactive:false,interactiveTolerance:350,multiple:false,offsetX:0,offsetY:0,onlyOne:false,position:\"top\",positionTracker:false,speed:350,timer:0,theme:\"tooltipster-default\",touchDevices:true,trigger:\"hover\",updateAnimation:true};s.prototype={_init:function(){var t=this;if(n.querySelector){if(t.options.content!==null){t._content_set(t.options.content)}else{var r=t.$el.attr(\"title\");if(typeof r===\"undefined\")r=null;t._content_set(r)}var i=t.options.functionInit.call(t.$el,t.$el,t.Content);if(typeof i!==\"undefined\")t._content_set(i);t.$el.removeAttr(\"title\").addClass(\"tooltipstered\");if(!u&&t.options.iconDesktop||u&&t.options.iconTouch){if(typeof t.options.icon===\"string\"){t.$elProxy=e('<span class=\"'+t.options.iconTheme+'\"></span>');t.$elProxy.text(t.options.icon)}else{if(t.options.iconCloning)t.$elProxy=t.options.icon.clone(true);else t.$elProxy=t.options.icon}t.$elProxy.insertAfter(t.$el)}else{t.$elProxy=t.$el}if(t.options.trigger==\"hover\"){t.$elProxy.on(\"mouseenter.\"+t.namespace,function(){if(!f()||t.options.touchDevices){t.mouseIsOverProxy=true;t._show()}}).on(\"mouseleave.\"+t.namespace,function(){if(!f()||t.options.touchDevices){t.mouseIsOverProxy=false}});if(u&&t.options.touchDevices){t.$elProxy.on(\"touchstart.\"+t.namespace,function(){t._showNow()})}}else if(t.options.trigger==\"click\"){t.$elProxy.on(\"click.\"+t.namespace,function(){if(!f()||t.options.touchDevices){t._show()}})}}},_show:function(){var e=this;if(e.Status!=\"shown\"&&e.Status!=\"appearing\"){if(e.options.delay){e.timerShow=setTimeout(function(){if(e.options.trigger==\"click\"||e.options.trigger==\"hover\"&&e.mouseIsOverProxy){e._showNow()}},e.options.delay)}else e._showNow()}},_showNow:function(n){var r=this;r.options.functionBefore.call(r.$el,r.$el,function(){if(r.enabled&&r.Content!==null){if(n)r.callbacks.show.push(n);r.callbacks.hide=[];clearTimeout(r.timerShow);r.timerShow=null;clearTimeout(r.timerHide);r.timerHide=null;if(r.options.onlyOne){e(\".tooltipstered\").not(r.$el).each(function(t,n){var r=e(n),i=r.data(\"tooltipster-ns\");e.each(i,function(e,t){var n=r.data(t),i=n.status(),s=n.option(\"autoClose\");if(i!==\"hidden\"&&i!==\"disappearing\"&&s){n.hide()}})})}var i=function(){r.Status=\"shown\";e.each(r.callbacks.show,function(e,t){t.call(r.$el)});r.callbacks.show=[]};if(r.Status!==\"hidden\"){var s=0;if(r.Status===\"disappearing\"){r.Status=\"appearing\";if(l()){r.$tooltip.clearQueue().removeClass(\"tooltipster-dying\").addClass(\"tooltipster-\"+r.options.animation+\"-show\");if(r.options.speed>0)r.$tooltip.delay(r.options.speed);r.$tooltip.queue(i)}else{r.$tooltip.stop().fadeIn(i)}}else if(r.Status===\"shown\"){i()}}else{r.Status=\"appearing\";var s=r.options.speed;r.bodyOverflowX=e(\"body\").css(\"overflow-x\");e(\"body\").css(\"overflow-x\",\"hidden\");var o=\"tooltipster-\"+r.options.animation,a=\"-webkit-transition-duration: \"+r.options.speed+\"ms; -webkit-animation-duration: \"+r.options.speed+\"ms; -moz-transition-duration: \"+r.options.speed+\"ms; -moz-animation-duration: \"+r.options.speed+\"ms; -o-transition-duration: \"+r.options.speed+\"ms; -o-animation-duration: \"+r.options.speed+\"ms; -ms-transition-duration: \"+r.options.speed+\"ms; -ms-animation-duration: \"+r.options.speed+\"ms; transition-duration: \"+r.options.speed+\"ms; animation-duration: \"+r.options.speed+\"ms;\",f=r.options.minWidth?\"min-width:\"+Math.round(r.options.minWidth)+\"px;\":\"\",c=r.options.maxWidth?\"max-width:\"+Math.round(r.options.maxWidth)+\"px;\":\"\",h=r.options.interactive?\"pointer-events: auto;\":\"\";r.$tooltip=e('<div class=\"tooltipster-base '+r.options.theme+'\" style=\"'+f+\" \"+c+\" \"+h+\" \"+a+'\"><div class=\"tooltipster-content\"></div></div>');if(l())r.$tooltip.addClass(o);r._content_insert();r.$tooltip.appendTo(\"body\");r.reposition();r.options.functionReady.call(r.$el,r.$el,r.$tooltip);if(l()){r.$tooltip.addClass(o+\"-show\");if(r.options.speed>0)r.$tooltip.delay(r.options.speed);r.$tooltip.queue(i)}else{r.$tooltip.css(\"display\",\"none\").fadeIn(r.options.speed,i)}r._interval_set();e(t).on(\"scroll.\"+r.namespace+\" resize.\"+r.namespace,function(){r.reposition()});if(r.options.autoClose){e(\"body\").off(\".\"+r.namespace);if(r.options.trigger==\"hover\"){if(u){setTimeout(function(){e(\"body\").on(\"touchstart.\"+r.namespace,function(){r.hide()})},0)}if(r.options.interactive){if(u){r.$tooltip.on(\"touchstart.\"+r.namespace,function(e){e.stopPropagation()})}var p=null;r.$elProxy.add(r.$tooltip).on(\"mouseleave.\"+r.namespace+\"-autoClose\",function(){clearTimeout(p);p=setTimeout(function(){r.hide()},r.options.interactiveTolerance)}).on(\"mouseenter.\"+r.namespace+\"-autoClose\",function(){clearTimeout(p)})}else{r.$elProxy.on(\"mouseleave.\"+r.namespace+\"-autoClose\",function(){r.hide()})}}else if(r.options.trigger==\"click\"){setTimeout(function(){e(\"body\").on(\"click.\"+r.namespace+\" touchstart.\"+r.namespace,function(){r.hide()})},0);if(r.options.interactive){r.$tooltip.on(\"click.\"+r.namespace+\" touchstart.\"+r.namespace,function(e){e.stopPropagation()})}}}}if(r.options.timer>0){r.timerHide=setTimeout(function(){r.timerHide=null;r.hide()},r.options.timer+s)}}})},_interval_set:function(){var t=this;t.checkInterval=setInterval(function(){if(e(\"body\").find(t.$el).length===0||e(\"body\").find(t.$elProxy).length===0||t.Status==\"hidden\"||e(\"body\").find(t.$tooltip).length===0){if(t.Status==\"shown\"||t.Status==\"appearing\")t.hide();t._interval_cancel()}else{if(t.options.positionTracker){var n=t._repositionInfo(t.$elProxy),r=false;if(o(n.dimension,t.elProxyPosition.dimension)){if(t.$elProxy.css(\"position\")===\"fixed\"){if(o(n.position,t.elProxyPosition.position))r=true}else{if(o(n.offset,t.elProxyPosition.offset))r=true}}if(!r){t.reposition()}}}},200)},_interval_cancel:function(){clearInterval(this.checkInterval);this.checkInterval=null},_content_set:function(e){if(typeof e===\"object\"&&e!==null&&this.options.contentCloning){e=e.clone(true)}this.Content=e},_content_insert:function(){var e=this,t=this.$tooltip.find(\".tooltipster-content\");if(typeof e.Content===\"string\"&&!e.options.contentAsHTML){t.text(e.Content)}else{t.empty().append(e.Content)}},_update:function(e){var t=this;t._content_set(e);if(t.Content!==null){if(t.Status!==\"hidden\"){t._content_insert();t.reposition();if(t.options.updateAnimation){if(l()){t.$tooltip.css({width:\"\",\"-webkit-transition\":\"all \"+t.options.speed+\"ms, width 0ms, height 0ms, left 0ms, top 0ms\",\"-moz-transition\":\"all \"+t.options.speed+\"ms, width 0ms, height 0ms, left 0ms, top 0ms\",\"-o-transition\":\"all \"+t.options.speed+\"ms, width 0ms, height 0ms, left 0ms, top 0ms\",\"-ms-transition\":\"all \"+t.options.speed+\"ms, width 0ms, height 0ms, left 0ms, top 0ms\",transition:\"all \"+t.options.speed+\"ms, width 0ms, height 0ms, left 0ms, top 0ms\"}).addClass(\"tooltipster-content-changing\");setTimeout(function(){if(t.Status!=\"hidden\"){t.$tooltip.removeClass(\"tooltipster-content-changing\");setTimeout(function(){if(t.Status!==\"hidden\"){t.$tooltip.css({\"-webkit-transition\":t.options.speed+\"ms\",\"-moz-transition\":t.options.speed+\"ms\",\"-o-transition\":t.options.speed+\"ms\",\"-ms-transition\":t.options.speed+\"ms\",transition:t.options.speed+\"ms\"})}},t.options.speed)}},t.options.speed)}else{t.$tooltip.fadeTo(t.options.speed,.5,function(){if(t.Status!=\"hidden\"){t.$tooltip.fadeTo(t.options.speed,1)}})}}}}else{t.hide()}},_repositionInfo:function(e){return{dimension:{height:e.outerHeight(false),width:e.outerWidth(false)},offset:e.offset(),position:{left:parseInt(e.css(\"left\")),top:parseInt(e.css(\"top\"))}}},hide:function(n){var r=this;if(n)r.callbacks.hide.push(n);r.callbacks.show=[];clearTimeout(r.timerShow);r.timerShow=null;clearTimeout(r.timerHide);r.timerHide=null;var i=function(){e.each(r.callbacks.hide,function(e,t){t.call(r.$el)});r.callbacks.hide=[]};if(r.Status==\"shown\"||r.Status==\"appearing\"){r.Status=\"disappearing\";var s=function(){r.Status=\"hidden\";if(typeof r.Content==\"object\"&&r.Content!==null){r.Content.detach()}r.$tooltip.remove();r.$tooltip=null;e(t).off(\".\"+r.namespace);e(\"body\").off(\".\"+r.namespace).css(\"overflow-x\",r.bodyOverflowX);e(\"body\").off(\".\"+r.namespace);r.$elProxy.off(\".\"+r.namespace+\"-autoClose\");r.options.functionAfter.call(r.$el,r.$el);i()};if(l()){r.$tooltip.clearQueue().removeClass(\"tooltipster-\"+r.options.animation+\"-show\").addClass(\"tooltipster-dying\");if(r.options.speed>0)r.$tooltip.delay(r.options.speed);r.$tooltip.queue(s)}else{r.$tooltip.stop().fadeOut(r.options.speed,s)}}else if(r.Status==\"hidden\"){i()}return r},show:function(e){this._showNow(e);return this},update:function(e){return this.content(e)},content:function(e){if(typeof e===\"undefined\"){return this.Content}else{this._update(e);return this}},reposition:function(){var n=this;if(e(\"body\").find(n.$tooltip).length!==0){n.$tooltip.css(\"width\",\"\");n.elProxyPosition=n._repositionInfo(n.$elProxy);var r=null,i=e(t).width(),s=n.elProxyPosition,o=n.$tooltip.outerWidth(false),u=n.$tooltip.innerWidth()+1,a=n.$tooltip.outerHeight(false);if(n.$elProxy.is(\"area\")){var f=n.$elProxy.attr(\"shape\"),l=n.$elProxy.parent().attr(\"name\"),c=e('img[usemap=\"#'+l+'\"]'),h=c.offset().left,p=c.offset().top,d=n.$elProxy.attr(\"coords\")!==undefined?n.$elProxy.attr(\"coords\").split(\",\"):undefined;if(f==\"circle\"){var v=parseInt(d[0]),m=parseInt(d[1]),g=parseInt(d[2]);s.dimension.height=g*2;s.dimension.width=g*2;s.offset.top=p+m-g;s.offset.left=h+v-g}else if(f==\"rect\"){var v=parseInt(d[0]),m=parseInt(d[1]),y=parseInt(d[2]),b=parseInt(d[3]);s.dimension.height=b-m;s.dimension.width=y-v;s.offset.top=p+m;s.offset.left=h+v}else if(f==\"poly\"){var w=[],E=[],S=0,x=0,T=0,N=0,C=\"even\";for(var k=0;k<d.length;k++){var L=parseInt(d[k]);if(C==\"even\"){if(L>T){T=L;if(k===0){S=T}}if(L<S){S=L}C=\"odd\"}else{if(L>N){N=L;if(k==1){x=N}}if(L<x){x=L}C=\"even\"}}s.dimension.height=N-x;s.dimension.width=T-S;s.offset.top=p+x;s.offset.left=h+S}else{s.dimension.height=c.outerHeight(false);s.dimension.width=c.outerWidth(false);s.offset.top=p;s.offset.left=h}}var A=0,O=0,M=0,_=parseInt(n.options.offsetY),D=parseInt(n.options.offsetX),P=n.options.position;function H(){var n=e(t).scrollLeft();if(A-n<0){r=A-n;A=n}if(A+o-n>i){r=A-(i+n-o);A=i+n-o}}function B(n,r){if(s.offset.top-e(t).scrollTop()-a-_-12<0&&r.indexOf(\"top\")>-1){P=n}if(s.offset.top+s.dimension.height+a+12+_>e(t).scrollTop()+e(t).height()&&r.indexOf(\"bottom\")>-1){P=n;M=s.offset.top-a-_-12}}if(P==\"top\"){var j=s.offset.left+o-(s.offset.left+s.dimension.width);A=s.offset.left+D-j/2;M=s.offset.top-a-_-12;H();B(\"bottom\",\"top\")}if(P==\"top-left\"){A=s.offset.left+D;M=s.offset.top-a-_-12;H();B(\"bottom-left\",\"top-left\")}if(P==\"top-right\"){A=s.offset.left+s.dimension.width+D-o;M=s.offset.top-a-_-12;H();B(\"bottom-right\",\"top-right\")}if(P==\"bottom\"){var j=s.offset.left+o-(s.offset.left+s.dimension.width);A=s.offset.left-j/2+D;M=s.offset.top+s.dimension.height+_+12;H();B(\"top\",\"bottom\")}if(P==\"bottom-left\"){A=s.offset.left+D;M=s.offset.top+s.dimension.height+_+12;H();B(\"top-left\",\"bottom-left\")}if(P==\"bottom-right\"){A=s.offset.left+s.dimension.width+D-o;M=s.offset.top+s.dimension.height+_+12;H();B(\"top-right\",\"bottom-right\")}if(P==\"left\"){A=s.offset.left-D-o-12;O=s.offset.left+D+s.dimension.width+12;var F=s.offset.top+a-(s.offset.top+s.dimension.height);M=s.offset.top-F/2-_;if(A<0&&O+o>i){var I=parseFloat(n.$tooltip.css(\"border-width\"))*2,q=o+A-I;n.$tooltip.css(\"width\",q+\"px\");a=n.$tooltip.outerHeight(false);A=s.offset.left-D-q-12-I;F=s.offset.top+a-(s.offset.top+s.dimension.height);M=s.offset.top-F/2-_}else if(A<0){A=s.offset.left+D+s.dimension.width+12;r=\"left\"}}if(P==\"right\"){A=s.offset.left+D+s.dimension.width+12;O=s.offset.left-D-o-12;var F=s.offset.top+a-(s.offset.top+s.dimension.height);M=s.offset.top-F/2-_;if(A+o>i&&O<0){var I=parseFloat(n.$tooltip.css(\"border-width\"))*2,q=i-A-I;n.$tooltip.css(\"width\",q+\"px\");a=n.$tooltip.outerHeight(false);F=s.offset.top+a-(s.offset.top+s.dimension.height);M=s.offset.top-F/2-_}else if(A+o>i){A=s.offset.left-D-o-12;r=\"right\"}}if(n.options.arrow){var R=\"tooltipster-arrow-\"+P;if(n.options.arrowColor.length<1){var U=n.$tooltip.css(\"background-color\")}else{var U=n.options.arrowColor}if(!r){r=\"\"}else if(r==\"left\"){R=\"tooltipster-arrow-right\";r=\"\"}else if(r==\"right\"){R=\"tooltipster-arrow-left\";r=\"\"}else{r=\"left:\"+Math.round(r)+\"px;\"}if(P==\"top\"||P==\"top-left\"||P==\"top-right\"){var z=parseFloat(n.$tooltip.css(\"border-bottom-width\")),W=n.$tooltip.css(\"border-bottom-color\")}else if(P==\"bottom\"||P==\"bottom-left\"||P==\"bottom-right\"){var z=parseFloat(n.$tooltip.css(\"border-top-width\")),W=n.$tooltip.css(\"border-top-color\")}else if(P==\"left\"){var z=parseFloat(n.$tooltip.css(\"border-right-width\")),W=n.$tooltip.css(\"border-right-color\")}else if(P==\"right\"){var z=parseFloat(n.$tooltip.css(\"border-left-width\")),W=n.$tooltip.css(\"border-left-color\")}else{var z=parseFloat(n.$tooltip.css(\"border-bottom-width\")),W=n.$tooltip.css(\"border-bottom-color\")}if(z>1){z++}var X=\"\";if(z!==0){var V=\"\",J=\"border-color: \"+W+\";\";if(R.indexOf(\"bottom\")!==-1){V=\"margin-top: -\"+Math.round(z)+\"px;\"}else if(R.indexOf(\"top\")!==-1){V=\"margin-bottom: -\"+Math.round(z)+\"px;\"}else if(R.indexOf(\"left\")!==-1){V=\"margin-right: -\"+Math.round(z)+\"px;\"}else if(R.indexOf(\"right\")!==-1){V=\"margin-left: -\"+Math.round(z)+\"px;\"}X='<span class=\"tooltipster-arrow-border\" style=\"'+V+\" \"+J+';\"></span>'}n.$tooltip.find(\".tooltipster-arrow\").remove();var K='<div class=\"'+R+' tooltipster-arrow\" style=\"'+r+'\">'+X+'<span style=\"border-color:'+U+';\"></span></div>';n.$tooltip.append(K)}n.$tooltip.css({top:Math.round(M)+\"px\",left:Math.round(A)+\"px\"})}return n},enable:function(){this.enabled=true;return this},disable:function(){this.hide();this.enabled=false;return this},destroy:function(){var t=this;t.hide();if(t.$el[0]!==t.$elProxy[0])t.$elProxy.remove();t.$el.removeData(t.namespace).off(\".\"+t.namespace);var n=t.$el.data(\"tooltipster-ns\");if(n.length===1){var r=typeof t.Content===\"string\"?t.Content:e(\"<div></div>\").append(t.Content).html();t.$el.removeClass(\"tooltipstered\").attr(\"title\",r).removeData(t.namespace).removeData(\"tooltipster-ns\").off(\".\"+t.namespace)}else{n=e.grep(n,function(e,n){return e!==t.namespace});t.$el.data(\"tooltipster-ns\",n)}return t},elementIcon:function(){return this.$el[0]!==this.$elProxy[0]?this.$elProxy[0]:undefined},elementTooltip:function(){return this.$tooltip?this.$tooltip[0]:undefined},option:function(e,t){if(typeof t==\"undefined\")return this.options[e];else{this.options[e]=t;return this}},status:function(){return this.Status}};e.fn[r]=function(){var t=arguments;if(this.length===0){if(typeof t[0]===\"string\"){var n=true;switch(t[0]){case\"setDefaults\":e.extend(i,t[1]);break;default:n=false;break}if(n)return true;else return this}else{return this}}else{if(typeof t[0]===\"string\"){var r=\"#*$~&\";this.each(function(){var n=e(this).data(\"tooltipster-ns\"),i=n?e(this).data(n[0]):null;if(i){if(typeof i[t[0]]===\"function\"){var s=i[t[0]](t[1],t[2])}else{throw new Error('Unknown method .tooltipster(\"'+t[0]+'\")')}if(s!==i){r=s;return false}}else{throw new Error(\"You called Tooltipster's \\\"\"+t[0]+'\" method on an uninitialized element')}});return r!==\"#*$~&\"?r:this}else{var o=[],u=t[0]&&typeof t[0].multiple!==\"undefined\",a=u&&t[0].multiple||!u&&i.multiple,f=t[0]&&typeof t[0].debug!==\"undefined\",l=f&&t[0].debug||!f&&i.debug;this.each(function(){var n=false,r=e(this).data(\"tooltipster-ns\"),i=null;if(!r){n=true}else if(a){n=true}else if(l){console.log('Tooltipster: one or more tooltips are already attached to this element: ignoring. Use the \"multiple\" option to attach more tooltips.')}if(n){i=new s(this,t[0]);if(!r)r=[];r.push(i.namespace);e(this).data(\"tooltipster-ns\",r);e(this).data(i.namespace,i)}o.push(i)});if(a)return o;else return this}}};var u=!!(\"ontouchstart\"in t);var a=false;e(\"body\").one(\"mousemove\",function(){a=true})})(jQuery,window,document);\n","var Vue = require('vue');\nVue.config.debug = true;","require('sugar');\n\nmodule.exports = {\n    changeDate: function (date) {\n        var date = Date.create(date).format('{yyyy}-{MM}-{dd}');\n        console.log('date is: ' + date);\n        store.setDate(date);\n    },\n    today: function () {\n        var date = Date.create('today').format('{yyyy}-{MM}-{dd}');\n        store.setDate(date);\n    },\n    goToDate: function (number) {\n        var date = Date.create(store.state.date.typed).addDays(number).format('{yyyy}-{MM}-{dd}');\n        store.setDate(date);\n    }\n};\n","var ExercisesRepository = {\n\n    /**\n     *\n     * @param exercise\n     * @returns {{name: *, description: *, priority: *, step_number: *, default_quantity: *, target: *, program_id: *, series_id: *, default_unit_id: *}}\n     */\n    setData: function (exercise) {\n        var data = {\n            name: exercise.name,\n            description: exercise.description,\n            priority: exercise.priority,\n            step_number: exercise.stepNumber,\n            default_quantity: exercise.defaultQuantity,\n            target: exercise.target,\n            program_id: exercise.program.id,\n            series_id: exercise.series.id,\n            stretch: HelpersRepository.convertBooleanToInteger(exercise.stretch)\n        };\n\n        if (exercise.defaultUnit.data) {\n            data.default_unit_id = exercise.defaultUnit.data.id;\n        }\n        else {\n            data.default_unit_id = exercise.defaultUnit.id;\n        }\n\n        return data;\n    }\n};","module.exports = {\n\n    /**\n     *\n     * @param minutes\n     * @returns {*}\n     */\n    formatDuration: function (minutes) {\n        if (!minutes && minutes != 0) {\n            return '-';\n        }\n\n        var hours = Math.floor(minutes / 60);\n        if (hours < 10) {\n            hours = '0' + hours;\n        }\n\n        minutes = minutes % 60;\n        if (minutes < 10) {\n            minutes = '0' + minutes;\n        }\n\n        return hours + ':' + minutes;\n    },\n\n    /**\n     *\n     * @param number\n     * @param howManyDecimals\n     * @returns {number}\n     */\n    roundNumber: function (number, howManyDecimals) {\n        if (!howManyDecimals) {\n            return Math.round(number);\n        }\n\n        var multiplyAndDivideBy = Math.pow(10, howManyDecimals);\n        return Math.round(number * multiplyAndDivideBy) / multiplyAndDivideBy;\n    }\n};","require('sugar');\n\nmodule.exports = {\n\n    /**\n     *\n     * @param response\n     */\n    handleResponseError: function (response) {\n        $.event.trigger('response-error', [response]);\n        $.event.trigger('hide-loading');\n    },\n\n    /**\n     *\n     */\n    closePopup: function ($event, that) {\n        if ($event.target.className === 'popup-outer') {\n            that.showPopup = false;\n        }\n    },\n\n    /**\n     *\n     * @param array\n     * @param id\n     * @returns {*}\n     */\n    findIndexById: function (array, id) {\n        return _.indexOf(array, _.findWhere(array, {id: id}));\n    },\n\n    /**\n     *\n     * @param boolean\n     * @returns {number}\n     */\n    convertBooleanToInteger: function (boolean) {\n        if (boolean) {\n            return 1;\n        }\n        return 0;\n    },\n\n    formatDateToSql: function (date) {\n        return Date.create(date).format('{yyyy}-{MM}-{dd}');\n    },\n\n    formatDateToLong: function (date) {\n        return Date.create(date).format('{Weekday} {dd} {Month} {yyyy}');\n    }\n};","var RecipesRepository = {\n\n    /**\n     *\n     * @returns {*}\n     */\n    getArrayOfIngredientsAndSteps: function () {\n        var stringOfIngredientsAndSteps = this.formatString($(\"#quick-recipe\").html());\n        return this.convertFormattedRecipeStringToArrayOfIngredientsAndSteps(stringOfIngredientsAndSteps);\n    },\n\n    /**\n     *\n     */\n    modifyQuickRecipeHtml: function (arrayOfIngredientsAndSteps) {\n        var html = '';\n        for (var i = 0; i < arrayOfIngredientsAndSteps.length; i++) {\n            html+= '<div>' + arrayOfIngredientsAndSteps[i] + '</div>';\n        }\n        $(\"#quick-recipe\").html(html);\n    },\n\n    /**\n     *\n     * @param arrayOfIngredientsAndSteps\n     * @returns {*|Array.<T>|string|Blob|ArrayBuffer}\n     */\n    getIngredients: function (arrayOfIngredientsAndSteps) {\n        var stepsIndex = this.getStepsIndex(arrayOfIngredientsAndSteps);\n        return arrayOfIngredientsAndSteps.slice(0, stepsIndex);\n    },\n\n    /**\n     *\n     * @param arrayOfIngredientsAndSteps\n     * @returns {*|Array.<T>|string|Blob|ArrayBuffer}\n     */\n    getSteps: function (arrayOfIngredientsAndSteps) {\n        var stepsIndex = this.getStepsIndex(arrayOfIngredientsAndSteps);\n        return arrayOfIngredientsAndSteps.slice(stepsIndex+1);\n    },\n\n    /**\n     *\n     * @param string\n     * @returns {*}\n     */\n    convertFormattedRecipeStringToArrayOfIngredientsAndSteps: function (string) {\n        //turn the string into an array of divs by first splitting at the br tags\n        var array = string.split('<br>');\n\n        //remove any empty elements from the array\n        array = _.without(array, '');\n\n        //Chrome was putting this line at the top. Remove that:\n        //<!--?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?-->\n        if (array[0].indexOf('<!--') !== -1 && array[0].indexOf('-->') !== -1) {\n            array.shift();\n        }\n\n        //Remove white space\n        for (var i = 0; i < array.length; i++) {\n            array[i] = array[i].trim();\n        }\n\n        return array;\n    },\n\n    /**\n     * The string may contain unwanted br tags and\n     * both opening and closing div tags.\n     * Format the string into a string of div tags to\n     * populate the html of the wysiwyg.\n     * @param string\n     * @returns {string|*}\n     */\n    formatString: function (string) {\n        //Remove any closing div tags and replace any opening div tags with a br tag.\n        while (string.indexOf('<div>') !== -1 || string.indexOf('</div>') !== -1) {\n            string = string.replace('<div>', '<br>').replace('</div>', '');\n        }\n\n        //var formattedString = \"\";\n        //var array = string.split('<br>');\n\n        //make formattedString a string with div tags\n        //for (var j = 0; j < array.length; j++) {\n        //    formattedString += '<div>' + array[j] + '</div>';\n        //}\n\n        //string = formattedString;\n\n        return string;\n    },\n\n    /**\n     * Check for the possibilities of words that indicate\n     * which line the steps starts on\n     *\n     * @param lines\n     * @returns {*|number|Number}\n     */\n    getStepsIndex: function (lines) {\n        var possibilities = [\n            'steps',\n            'preparation',\n            'directions',\n            'method'\n        ];\n\n        //Convert lines to lower case\n        var linesLower = [];\n        for (var i = 0; i < lines.length; i++) {\n            linesLower.push(lines[i].toLowerCase());\n        }\n\n        //Find the index of the word that indicates the start of the steps\n        for (var i = 0; i < possibilities.length; i++) {\n            if (linesLower.indexOf(possibilities[i]) !== -1) {\n                return linesLower.indexOf(possibilities[i]);\n            }\n            //Allow for colon after the word\n            else if (linesLower.indexOf(possibilities[i] + ':') !== -1) {\n                return linesLower.indexOf(possibilities[i] + ':');\n            }\n        }\n    },\n\n    /**\n     * ingredients is an array of strings.\n     * The string should include the quantity, unit, food, and description,\n     * providing the user has entered them.\n     * We want to take each string and turn it into an object with\n     * food, unit, quantity and description properties.\n     * Then return the new array of objects.\n     * @param ingredients (array)\n     * @returns {Array}\n     */\n    convertIngredientStringsToObjects: function (ingredients) {\n        var ingredientsAsObjects = [];\n        var that = this;\n\n        $(ingredients).each(function () {\n            var ingredientAsString = this;\n            var ingredientAsObject = {};\n\n            ingredientAsObject.description = that.getIngredientDescription(ingredientAsString);\n\n            var quantityUnitAndFood = that.getIngredientQuantityUnitAndFood(ingredientAsString);\n\n            //$line is now just the quantity, unit and food, without the description\n            //split $line into an array with quantity, unit and food\n            var split = quantityUnitAndFood.split(' ');\n\n            //Add the quantity, unit and food to the ingredientAsObject\n            ingredientAsObject.quantity = split[0];\n            ingredientAsObject.unit = split[1];\n            ingredientAsObject.food = split[2];\n\n            //Add the item object to the items array\n            ingredientsAsObjects.push(ingredientAsObject);\n        });\n\n        return ingredientsAsObjects;\n    },\n\n\n    /**\n     * If there is a description,\n     * separate the description from the quantity, unit and food\n     * @param ingredientAsString\n     * @returns {*}\n     */\n    getIngredientDescription: function (ingredientAsString) {\n        var split = this.splitDescriptionFromQuantityUnitAndFood(ingredientAsString);\n\n        if (split[1]) {\n            return split[1].trim();\n        }\n\n        //There is no description\n        return '';\n    },\n\n    /**\n     *\n     * @returns {*}\n     */\n    getIngredientQuantityUnitAndFood: function (ingredientAsString) {\n        var split = this.splitDescriptionFromQuantityUnitAndFood(ingredientAsString);\n\n        return split[0];\n    },\n\n    /**\n     *\n     * @param ingredientAsString\n     * @returns {*}\n     */\n    splitDescriptionFromQuantityUnitAndFood: function (ingredientAsString) {\n        if (ingredientAsString.indexOf(',') !== -1) {\n            return ingredientAsString.split(',');\n        }\n\n        return [ingredientAsString];\n    },\n\n    /**\n     *\n     * @param ingredients\n     * @returns {Array}\n     */\n    checkIngredientsForErrors: function (ingredients) {\n        var lineNumber = 0;\n        this.errors = [];\n        var that = this;\n\n        $(ingredients).each(function () {\n            var ingredient = this;\n            lineNumber++;\n\n            that.checkIngredientContainsQuantityUnitAndFood(ingredient, lineNumber);\n            ingredient = that.checkIngredientQuantityIsValid(ingredient, lineNumber);\n        });\n\n        return this.errors;\n    },\n\n    /**\n     *\n     * @param ingredient\n     * @param lineNumber\n     */\n    checkIngredientContainsQuantityUnitAndFood: function (ingredient, lineNumber) {\n        if (!ingredient.quantity || !ingredient.unit || !ingredient.food) {\n            this.errors.push('Quantity, unit, and food have not all been included on line ' + lineNumber);\n            $(\"#quick-recipe > div\").eq(lineNumber-1).css('background', 'red');\n        }\n    },\n\n    /**\n     *\n     * @param ingredient\n     * @param lineNumber\n     */\n    checkIngredientQuantityIsValid: function (ingredient, lineNumber) {\n        var checkedQuantity = this.checkQuantityIsValid(ingredient.quantity);\n        if (!checkedQuantity) {\n            //Quantity is invalid\n            this.errors.push('Quantity is invalid on line ' + lineNumber);\n            $(\"#quick-recipe > div\").eq(lineNumber-1).css('background', 'red');\n        }\n        else {\n            // Quantity is valid and if it was a fraction, it has now been converted to a decimal.\n            ingredient.quantity = checkedQuantity;\n        }\n\n        return ingredient;\n    },\n\n    /**\n     * Check the quantity for any invalid characters.\n     * If the quantity is a fraction, convert it to a decimal.\n     * @param quantity\n     * @returns {*}\n     */\n    checkQuantityIsValid: function (quantity) {\n        for (var i = 0; i < quantity.length; i++) {\n            var character = quantity[i];\n\n            if (isNaN(character) && character !== '.' && character !== '/') {\n                //character is not a number, '.', or '/'. The quantity is invalid.\n                quantity = false;\n            }\n            else {\n                quantity = this.convertQuantityToDecimal(quantity);\n            }\n        }\n\n        return quantity;\n    },\n\n    /**\n     * Check if $quantity is a fraction, and if so, convert to decimal\n     * @param quantity\n     * @returns {*}\n     */\n    convertQuantityToDecimal: function (quantity) {\n        if (quantity.indexOf('/') !== -1) {\n            //it is a fraction\n            var parts = quantity.split('/');\n            quantity = parseInt(parts[0], 10) / parseInt(parts[1], 10);\n        }\n\n        return quantity;\n    }\n}","var HelpersRepository = require('./HelpersRepository');\nrequire('sugar');\n\nmodule.exports = {\n\n    state: {\n        exercises: [],\n        date: {\n            typed: Date.create('today').format('{dd}/{MM}/{yyyy}'),\n            long: HelpersRepository.formatDateToLong('today'),\n            sql: HelpersRepository.formatDateToSql('today')\n        },\n        selectedExercise: {\n            program: {},\n            series: {},\n            defaultUnit: {\n                data: {}\n            }\n        },\n        exerciseUnits: [],\n        programs: []\n    },\n\n    /**\n     *\n     */\n    getExercises: function (that) {\n        $.event.trigger('show-loading');\n        that.$http.get('/api/exercises').then(function (response) {\n            store.state.exercises = response.data;\n            $.event.trigger('hide-loading');\n        }, function (response) {\n            HelpersRepository.handleResponseError(response);\n        });\n        // that.$http.get('/api/exercises', function (response) {\n        //\n        // })\n        // .error(function (response) {\n        //\n        // });\n    },\n\n    /**\n     *\n     */\n    getExerciseUnits: function (that) {\n        $.event.trigger('show-loading');\n        that.$http.get('/api/exerciseUnits').then(function (response) {\n            store.state.exerciseUnits = response.data;\n            $.event.trigger('hide-loading');\n        }, function (response) {\n            HelpersRepository.handleResponseError(response);\n        });\n    },\n\n    /**\n     *\n     */\n    getExercisePrograms: function (that) {\n        $.event.trigger('show-loading');\n        that.$http.get('/api/exercisePrograms').then(function (response) {\n            store.state.programs = response.data;\n            $.event.trigger('hide-loading');\n        }, function (response) {\n            HelpersRepository.handleResponseError(response);\n        });\n    },\n\n    /**\n    *\n    * @param exercise\n    */\n    updateExercise: function (exercise) {\n        var index = HelpersRepository.findIndexById(this.state.exercises, exercise.id);\n        this.state.exercises.$set(index, exercise);\n    },\n\n    /**\n     * \n     * @param date\n     */\n    setDate: function (date) {\n        this.state.date.typed = Date.create(date).format('{dd}/{MM}/{yyyy}');\n        this.state.date.long = HelpersRepository.formatDateToLong(date);\n        this.state.date.sql = HelpersRepository.formatDateToSql(date);\n    }\n};","var TimersRepository = {\n\n    /**\n     *\n     * @param entry\n     * @param date\n     * @returns {{start: *}}\n     */\n    setData: function (entry, date) {\n        var data = {\n            start: this.calculateStartDateTime(entry, date)\n        };\n\n        if (entry.finish) {\n            data.finish = this.calculateFinishTime(entry, date);\n        }\n\n        if (entry.activity) {\n            data.activity_id = entry.activity.id;\n        }\n\n        return data;\n    },\n\n    /**\n     *\n     * @param byDate\n     * @param date\n     * @returns {string}\n     */\n    calculateUrl: function (byDate, date) {\n        var url = '/api/timers';\n        if (byDate) {\n            url+= '?byDate=true';\n        }\n        else if (date) {\n            url+= '?date=' + date;\n        }\n\n        return url;\n    },\n\n    /**\n     *\n     * @param entry\n     * @param date\n     * @returns {*}\n     */\n    calculateStartDateTime: function (entry, date) {\n        if (date) {\n            return this.calculateStartDate(entry, date) + ' ' + this.calculateStartTime(entry);\n        }\n        else {\n            //The 'start' timer button has been clicked rather than entering the time manually, so make the start now\n            return moment().format('YYYY-MM-DD HH:mm:ss');\n        }\n\n    },\n\n    /**\n     *\n     * @param entry\n     * @param date\n     * @returns {*}\n     */\n    calculateStartDate: function (entry, date) {\n        if (entry.startedYesterday) {\n            return moment(date, 'YYYY-MM-DD').subtract(1, 'days').format('YYYY-MM-DD');\n        }\n        else {\n            return date;\n        }\n    },\n\n    /**\n     *\n     * @param entry\n     * @param date\n     * @returns {*}\n     */\n    calculateFinishTime: function (entry, date) {\n        if (entry.finish) {\n            return date + ' ' + Date.parse(entry.finish).toString('HH:mm:ss');\n        }\n        else {\n            //The stop timer button has been pressed. Make the finish time now.\n            return moment().format('YYYY-MM-DD HH:mm:ss');\n        }\n\n    },\n\n    /**\n     *\n     * @param entry\n     * @returns {string}\n     */\n    calculateStartTime: function (entry) {\n        return Date.parse(entry.start).toString('HH:mm:ss');\n    }\n};","module.exports = {\n    template: '#entries-for-specific-exercise-and-date-and-unit-popup-template',\n    data: function () {\n        return {\n            showPopup: false,\n            entries: {}\n        };\n    },\n    components: {},\n    methods: {\n\n        /**\n         * Get all the the user's entries for a particular exercise\n         * with a particular unit on a particular date.\n         * @param entry\n         */\n        getEntriesForSpecificExerciseAndDateAndUnit: function (entry) {\n            $.event.trigger('show-loading');\n\n            var data = {\n                date: this.date.sql,\n                exercise_id: entry.exercise.data.id,\n                exercise_unit_id: entry.unit.id\n            };\n\n            this.$http.get('api/exerciseEntries/specificExerciseAndDateAndUnit', data).then(function (response) {\n                this.entries = response;\n                this.showPopup = true;\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         */\n        deleteExerciseEntry: function (entry) {\n            if (confirm(\"Are you sure?\")) {\n                $.event.trigger('show-loading');\n                this.$http.delete('/api/exerciseEntries/' + entry.id).then(function (response) {\n                    this.entries = _.without(this.entries, entry);\n                    //This might be unnecessary to do each time, and it fetches a lot\n                    //of data for just deleting one entry.\n                    //Perhaps do it when the popup closes instead?\n                    $.event.trigger('get-exercise-entries-for-the-day');\n                    $.event.trigger('provide-feedback', ['Entry deleted', 'success']);\n                    $.event.trigger('hide-loading');\n                }, function (response) {\n                    HelpersRepository.handleResponseError(response);\n                });\n            }\n        },\n\n        /**\n         *\n         */\n        listen: function () {\n            var that = this;\n            $(document).on('show-entries-for-specific-exercise-and-date-and-unit-popup', function (event, entry) {\n                that.getEntriesForSpecificExerciseAndDateAndUnit(entry);\n            });\n        }\n    },\n    props: [\n        'date'\n    ],\n    ready: function () {\n        this.listen();\n    }\n};\n","module.exports = {\n    template: '#exercise-entries-template',\n    data: function () {\n        return {\n            exerciseEntries: [],\n            showExerciseEntryInputs: false,\n            selectedExercise: {\n                unit: {}\n            },\n            shared: store.state\n        };\n    },\n    computed: {\n        date: function () {\n          return this.shared.date;\n        }\n    },\n    components: {},\n    methods: {\n\n        /**\n         *\n         * @param entry\n         */\n        showEntriesForSpecificExerciseAndDateAndUnitPopup: function (entry) {\n            $.event.trigger('show-entries-for-specific-exercise-and-date-and-unit-popup', [entry]);\n        },\n\n        /**\n         *\n         */\n        getEntriesForTheDay: function () {\n            $.event.trigger('show-loading');\n            this.$http.get('/api/exerciseEntries/' + this.date.sql).then(function (response) {\n                this.exerciseEntries = response.data;\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         * Similar method to this in SeriesExercisesComponent\n         */\n        insertExerciseSet: function (exercise) {\n            $.event.trigger('show-loading');\n            var data = {\n                date: this.date.sql,\n                exercise_id: exercise.data.id,\n                exerciseSet: true\n            };\n\n            this.$http.post('/api/exerciseEntries', data).then(function (response) {\n                $.event.trigger('provide-feedback', ['Set added', 'success']);\n                this.getEntriesForTheDay();\n                this.exerciseEntries = response.data;\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         */\n        listen: function () {\n            var that = this;\n            /**\n             * For updating the exercise entries from the\n             * series controller on the series page\n             */\n            $(document).on('get-exercise-entries-for-the-day', function (event) {\n                that.getEntriesForTheDay();\n            });\n            $(document).on('date-changed', function (event) {\n                that.getEntriesForTheDay();\n            });\n            $(document).on('exercise-entry-added', function (event, data) {\n                //Todo: all the entries I think are actually in the data (unnecessarily)\n                that.getEntriesForTheDay();\n            });\n            /**\n             * For updating the exercise entries from the\n             * series controller on the series page\n             */\n            //$(document).on('getExerciseEntries', function (event, data) {\n            //    that.exerciseEntries = data;\n            //});\n        }\n    },\n    props: [\n        \n    ],\n    ready: function () {\n        this.listen();\n        this.getEntriesForTheDay();\n    }\n};","module.exports = {\n    template: '#exercise-popup-template',\n    data: function () {\n        return {\n            showPopup: false\n        };\n    },\n    components: {},\n    methods: {\n\n        /**\n         *\n         */\n        updateExercise: function () {\n            $.event.trigger('show-loading');\n\n            var data = ExercisesRepository.setData(this.selectedExercise);\n\n            this.$http.put('/api/exercises/' + this.selectedExercise.id, data).then(function (response) {\n                this.selectedExercise = response.data;\n                store.updateExercise(response.data);\n\n\n                this.showPopup = false;\n                $.event.trigger('provide-feedback', ['Exercise updated', 'success']);\n                $.event.trigger('hide-loading');\n                $(\"#exercise-step-number\").val(\"\");\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         */\n        deleteExercise: function () {\n            if (confirm(\"Are you sure?\")) {\n                $.event.trigger('show-loading');\n                this.$http.delete('/api/exercises/' + this.selectedExercise.id).then(function (response) {\n                    var index = _.indexOf(this.exercises, _.findWhere(this.exercises, {id: this.selectedExercise.id}));\n                    this.exercises = _.without(this.exercises, this.exercises[index]);\n                    $.event.trigger('provide-feedback', ['Exercise deleted', 'success']);\n                    this.showPopup = false;\n                    $.event.trigger('hide-loading');\n                }, function (response) {\n                    HelpersRepository.handleResponseError(response);\n                });\n            }\n        },\n\n        /**\n         *\n         */\n        listen: function () {\n            var that = this;\n            $(document).on('show-exercise-popup', function (event) {\n                that.showPopup = true;\n            });\n        }\n    },\n    props: [\n        'selectedExercise',\n        'exercises',\n        'exerciseSeries',\n        'programs',\n        'units'\n    ],\n    ready: function () {\n        this.listen();\n    }\n};\n","module.exports = {\n    template: '#exercise-units-page-template',\n    data: function () {\n        return {\n            units: [],\n            newUnit: {}\n        };\n    },\n    components: {},\n    methods: {\n        /**\n         *\n         */\n        getUnits: function () {\n            $.event.trigger('show-loading');\n            this.$http.get('/api/exerciseUnits').then(function (response) {\n                this.units = response;\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         */\n        insertUnit: function () {\n            $.event.trigger('show-loading');\n            var data = {\n                name: this.newUnit.name\n            };\n\n            this.$http.post('/api/exerciseUnits', data).then(function (response) {\n                this.units.push(response.data);\n                $.event.trigger('provide-feedback', ['Unit created', 'success']);\n                //this.$broadcast('provide-feedback', 'Unit created', 'success');\n                $.event.trigger('hide-loading');\n                $(\"#create-new-exercise-unit\").val(\"\");\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         * @param unit\n         */\n        deleteUnit: function (unit) {\n            if (confirm(\"Are you sure?\")) {\n                $.event.trigger('show-loading');\n                this.$http.delete('/api/exerciseUnits/' + unit.id).then(function (response) {\n                    this.units = _.without(this.units, unit);\n                    $.event.trigger('provide-feedback', ['Unit deleted', 'success']);\n                    //this.$broadcast('provide-feedback', 'Unit deleted', 'success');\n                    $.event.trigger('hide-loading');\n\n                }, function (response) {\n                    HelpersRepository.handleResponseError(response);\n                });\n            }\n        },\n    },\n    props: [\n        //data to be received from parent\n    ],\n    ready: function () {\n        this.getUnits();\n    }\n};","var ExercisesRepository = require('../../repositories/ExercisesRepository');\n\nmodule.exports = {\n    template: '#exercises-page-template',\n    data: function () {\n        return {\n            date: store.state.date,\n            exerciseSeries: [],\n            exerciseSeriesHistory: [],\n            showNewSeriesFields: false,\n            showNewExerciseFields: false,\n            selectedSeries: {\n                exercises: {\n                    data: []\n                }\n            },\n            showExerciseEntryInputs: false,\n            programs: store.state.programs,\n            shared: store.state,\n            showStretches: false,\n            filterByName: '',\n            filterByDescription: '',\n            filterByPriority: 1,\n            filterBySeries: '',\n            showFilters: false\n        };\n    },\n    computed: {\n        selectedExercise: function () {\n          return this.shared.selectedExercise;\n        },\n        units: function () {\n            return this.shared.exerciseUnits;\n        }\n    },\n    components: {},\n    filters: {\n        filterExercises: function (exercises) {\n            var that = this;\n\n            //Sort\n            exercises = _.chain(exercises)\n                .sortBy(function (exercise) {return exercise.stepNumber})\n                .sortBy(function (exercise) {return exercise.series.id})\n                .sortBy('priority')\n                .sortBy(function (exercise) {\n                    return exercise.lastDone * -1\n                })\n                .partition(function (exercise) {\n                    return exercise.lastDone === null;\n                })\n                .flatten()\n                .value();\n\n            //Filter\n            return exercises.filter(function (exercise) {\n                var filteredIn = true;\n\n                //Priority filter\n                if (that.filterByPriority && exercise.priority != that.filterByPriority) {\n                    filteredIn = false;\n                }\n\n                //Name filter\n                if (that.filterByName && exercise.name.indexOf(that.filterByName) === -1) {\n                    filteredIn = false;\n                }\n\n                //Description filter\n                if (exercise.description && exercise.description.indexOf(that.filterByDescription) === -1) {\n                    filteredIn = false;\n                }\n\n                else if (!exercise.description && that.filterByDescription !== '') {\n                    filteredIn = false;\n                }\n\n                //Stretches files\n                if (!that.showStretches && exercise.stretch) {\n                    filteredIn = false;\n                }\n\n                //Series filter\n                if (that.filterBySeries && exercise.series.name != that.filterBySeries && that.filterBySeries !== 'all') {\n                    filteredIn = false;\n                }\n\n                return filteredIn;\n            });\n        },\n\n        filterSeries: function (series) {\n            var that = this;\n\n            //Sort\n            series = _.chain(series)\n                .sortBy('priority')\n                .sortBy('lastDone')\n                .value();\n\n            /**\n             * @VP:\n             * This method feels like a lot of code for just\n             * a simple thing-ordering series by their lastDone value,\n             * putting those with a null lastDone value on the end.\n             * I tried underscore.js _.partition with _.flatten,\n             * but it put 0 values on the end,\n             * (I had trouble getting the predicate parameter of the _.partition method to work.)\n             */\n            series = this.moveLastDoneNullToEnd(series);\n\n            //Filter\n            return series.filter(function (thisSeries) {\n                var filteredIn = true;\n\n                //Priority filter\n                if (that.priorityFilter && thisSeries.priority != that.priorityFilter) {\n                    filteredIn = false;\n                }\n\n                return filteredIn;\n            });\n        },\n    },\n    methods: {\n\n        /**\n         *\n         */\n        insertExerciseSet: function (exercise) {\n            $.event.trigger('show-loading');\n            var data = {\n                date: this.shared.date.sql,\n                exercise_id: exercise.id,\n                exerciseSet: true\n            };\n\n            this.$http.post('/api/exerciseEntries', data).then(function (response) {\n                exercise.lastDone = 0;\n                $.event.trigger('provide-feedback', ['Set added', 'success']);\n                $.event.trigger('get-exercise-entries-for-the-day');\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         */\n        showExercisePopup: function (exercise) {\n            $.event.trigger('show-loading');\n            this.$http.get('/api/exercises/' + exercise.id).then(function (response) {\n                this.selectedExercise = response.data;\n                $.event.trigger('show-exercise-popup');\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         * For the series filter\n         * @param series\n         * @returns {*}\n         */\n        moveLastDoneNullToEnd: function (series) {\n            //Get the series that have lastDone null values\n            var seriesWithNullLastDone = _.filter(series, function (oneSeries) {\n                return oneSeries.lastDone == null;\n            });\n\n            //Remove the series that have lastDone null values\n            for (var i = 0; i < seriesWithNullLastDone.length; i++) {\n                var index = _.indexOf(series, _.findWhere(series, {id: seriesWithNullLastDone[i].id}));\n                series = _.without(series, series[index]);\n            }\n\n            //Add the series that have lastDone null values back on the\n            //end of the series array\n            for (var i = 0; i < seriesWithNullLastDone.length; i++) {\n                series.push(seriesWithNullLastDone[i]);\n            }\n\n            return series;\n        },\n\n        /**\n         *\n         */\n        getSeries: function () {\n            $.event.trigger('show-loading');\n            this.$http.get('/api/exerciseSeries').then(function (response) {\n                this.exerciseSeries = response.data;\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         */\n        getExerciseSeriesHistory: function (key) {\n            $.event.trigger('show-loading');\n\n            //Find the series. The exercises were grouped according to series, so all we have is the series name (key).\n            var series = _.find(this.exerciseSeries, function (series) {\n                return series.name === key;\n            });\n\n            this.$http.get('api/seriesEntries/' + series.id).then(function (response) {\n                //For displaying the name of the series in the popup\n                this.selectedSeries = series;\n                this.exerciseSeriesHistory = response.data;\n                $.event.trigger('show-series-history-popup');\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         */\n        getExercisesInSeries: function (series) {\n            $.event.trigger('show-loading');\n            this.$http.get('/api/exerciseSeries/' + series.id).then(function (response) {\n                this.selectedSeries = response.data;\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         */\n        showExerciseSeriesPopup: function (key) {\n            //Find the series. The exercises were grouped according to series, so all we have is the series name (key).\n            var series = _.find(this.exerciseSeries, function (series) {\n                return series.name === key;\n            });\n\n            $.event.trigger('show-loading');\n            this.$http.get('/api/exerciseSeries/' + series.id).then(function (response) {\n                this.selectedSeries = response.data;\n                $.event.trigger('show-series-popup');\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        }\n    },\n    props: [\n        //data to be received from parent\n    ],\n    ready: function () {\n        this.getSeries();\n    }\n};\n\n","require('bootstrap');\n\nmodule.exports = {\n    template: '#navbar-template',\n    data: function () {\n        return {\n\n        };\n    },\n    components: {},\n    methods: {\n        /**\n         *\n         */\n        showNewManualTimerPopup: function () {\n            $.event.trigger('show-new-manual-timer-popup');\n        },\n    },\n    props: [\n        //data to be received from parent\n    ],\n    ready: function () {\n\n    }\n};\n","module.exports = {\n    template: '#new-exercise-template',\n    data: function () {\n        return {\n            newExercise: {}\n        };\n    },\n    components: {},\n    methods: {\n\n        /**\n         *\n         */\n        insertExercise: function () {\n            $.event.trigger('show-loading');\n            var data = ExercisesRepository.setData(this.newExercise);\n\n            this.$http.post('/api/exercises', data).then(function (response) {\n                if (this.exercises) {\n                    //If adding new exercise from the series page,\n                    //this.exercises isn't specified\n                    this.exercises.push(response);\n                }\n\n                $.event.trigger('provide-feedback', ['Exercise created', 'success']);\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         * @param response\n         */\n        handleResponseError: function (response) {\n            $.event.trigger('response-error', [response]);\n            this.showLoading = false;\n        }\n    },\n    props: [\n        'showNewExerciseFields',\n        'exercises',\n        'programs',\n        'exerciseSeries',\n        'units'\n    ],\n    ready: function () {\n\n    }\n};\n","module.exports = {\n    template: '#new-exercise-entry-template',\n    data: function () {\n        return {\n            newEntry: {},\n            units: []\n        };\n    },\n    components: {},\n    methods: {\n\n        /**\n         *\n         */\n        getUnits: function () {\n            $.event.trigger('show-loading');\n            this.$http.get('/api/exerciseUnits').then(function (response) {\n                this.units = response;\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         */\n        insertEntry: function () {\n            $.event.trigger('show-loading');\n\n            //this.newEntry.exercise.unit_id = $(\"#exercise-unit\").val();\n            //$(\"#exercise\").val(\"\").focus();\n\n            var data = {\n                date: this.date.sql,\n                exercise_id: this.newEntry.id,\n                quantity: this.newEntry.quantity,\n                unit_id: this.newEntry.unit.id\n            };\n\n            this.$http.post('/api/exerciseEntries', data).then(function (response) {\n                //this.exerciseEntries = response;\n                $.event.trigger('exercise-entry-added', [response]);\n                $.event.trigger('provide-feedback', ['Entry created', 'success']);\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         * @param response\n         */\n        handleResponseError: function (response) {\n            $.event.trigger('response-error', [response]);\n            this.showLoading = false;\n        }\n    },\n    props: [\n        'date'\n    ],\n    events: {\n        'option-chosen': function (option) {\n            this.newEntry = option;\n            this.newEntry.unit = option.defaultUnit.data;\n            this.newEntry.quantity = option.defaultQuantity;\n        }\n    },\n    ready: function () {\n        this.getUnits();\n    }\n};","module.exports = {\n    template: '#new-series-template',\n    data: function () {\n        return {\n            newSeries: {}\n        };\n    },\n    components: {},\n    methods: {\n\n        /**\n         *\n         */\n        insertSeries: function () {\n            $.event.trigger('show-loading');\n            var data = {\n                name: this.newSeries.name\n            };\n\n            this.$http.post('/api/exerciseSeries', data).then(function (response) {\n                this.exerciseSeries.push(response.data);\n                $.event.trigger('provide-feedback', ['Series created', 'success']);\n                this.showLoading = false;\n                this.newSeries.name = '';\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         * @param response\n         */\n        handleResponseError: function (response) {\n            $.event.trigger('response-error', [response]);\n            this.showLoading = false;\n        }\n    },\n    props: [\n        'showNewSeriesFields',\n        'exerciseSeries'\n    ],\n    ready: function () {\n\n    }\n};","module.exports = {\n    template: '#series-history-popup-template',\n    data: function () {\n        return {\n            showPopup: false,\n            filterByExercise: ''\n        };\n    },\n    components: {},\n    filters: {\n        exerciseFilter: function (entries) {\n            var that = this;\n            return entries.filter(function (entriesForDay) {\n                return entriesForDay.exercise.data.name.indexOf(that.filterByExercise) !== -1;\n            });\n        }\n    },\n    methods: {\n\n        /**\n         *\n         */\n        closePopup: function ($event) {\n            if ($event.target.className === 'popup-outer') {\n                this.showPopup = false;\n            }\n        },\n\n        /**\n         *\n         */\n        listen: function () {\n            var that = this;\n            $(document).on('show-series-history-popup', function (event, series) {\n                that.selectedSeries = series;\n                that.showPopup = true;\n            });\n        },\n\n        /**\n         *\n         * @param response\n         */\n        handleResponseError: function (response) {\n            $.event.trigger('response-error', [response]);\n            this.showLoading = false;\n        }\n    },\n    props: [\n        'exerciseSeriesHistory',\n        'selectedSeries'\n    ],\n    ready: function () {\n        this.listen();\n    }\n};\n","module.exports = {\n    template: '#series-popup-template',\n    data: function () {\n        return {\n            showPopup: false\n        };\n    },\n    components: {},\n    methods: {\n\n        /**\n         *\n         */\n        updateSeries: function () {\n            $.event.trigger('show-loading');\n\n            var data = {\n                name: this.selectedSeries.name,\n                priority: this.selectedSeries.priority,\n                workout_ids: this.selectedSeries.workout_ids\n            };\n\n            this.$http.put('/api/exerciseSeries/' + this.selectedSeries.id, data).then(function (response) {\n                var index = _.indexOf(this.exerciseSeries, _.findWhere(this.exerciseSeries, {id: this.selectedSeries.id}));\n                this.exerciseSeries[index].name = response.data.name;\n                this.exerciseSeries[index].priority = response.data.priority;\n                this.showPopup = false;\n                $.event.trigger('provide-feedback', ['Series updated', 'success']);\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         */\n        deleteSeries: function () {\n            if (confirm(\"Are you sure?\")) {\n                $.event.trigger('show-loading');\n                this.$http.delete('/api/exerciseSeries/' + this.selectedSeries.id).then(function (response) {\n                    //this.exerciseSeries = _.without(this.exerciseSeries, this.selectedSeries);\n                    var index = _.indexOf(this.exerciseSeries, _.findWhere(this.exerciseSeries, {id: this.selectedSeries.id}));\n                    this.exerciseSeries = _.without(this.exerciseSeries, this.exerciseSeries[index]);\n                    this.showPopup = false;\n                    $.event.trigger('provide-feedback', ['Series deleted', 'success']);\n                    $.event.trigger('hide-loading');\n                }, function (response) {\n                    HelpersRepository.handleResponseError(response);\n                });\n            }\n        },\n\n        /**\n         *\n         */\n        closePopup: function ($event) {\n            if ($event.target.className === 'popup-outer') {\n                this.showPopup = false;\n            }\n        },\n\n        /**\n         *\n         */\n        listen: function () {\n            var that = this;\n            $(document).on('show-series-popup', function (event, series) {\n                that.selectedSeries = series;\n                that.showPopup = true;\n            });\n        },\n\n        /**\n         *\n         * @param response\n         */\n        handleResponseError: function (response) {\n            $.event.trigger('response-error', [response]);\n            this.showLoading = false;\n        }\n    },\n    props: [\n        'selectedSeries',\n        'exerciseSeries'\n    ],\n    ready: function () {\n        this.listen();\n    }\n};","var FoodPopup = Vue.component('food-popup', {\n    template: '#food-popup-template',\n    data: function () {\n        return {\n            showPopup: false,\n            selectedFood: {\n                //food: {},\n                defaultUnit: {\n                    data: {}\n                },\n                unitIds: []\n            },\n            units: []\n        };\n    },\n    components: {},\n    methods: {\n\n        /**\n        *\n        */\n        updateFood: function () {\n            $.event.trigger('show-loading');\n\n            var data = {\n                name: this.selectedFood.name,\n                default_unit_id: this.selectedFood.defaultUnit.data.id,\n                unit_ids: this.selectedFood.unitIds,\n            };\n\n            var that = this;\n\n            setTimeout(function () {\n                that.$http.put('/api/foods/' + that.selectedFood.id, data).then(function (response) {\n                    that.selectedFood = response;\n                    $.event.trigger('provide-feedback', ['Food updated', 'success']);\n                    $.event.trigger('food-updated', [response]);\n                    $.event.trigger('hide-loading');\n                }, function (response) {\n                    that.handleResponseError(response);\n                });\n            }, 1000);\n        },\n\n        /**\n         *\n         */\n        updateDefaultUnit: function (unit) {\n            $.event.trigger('show-loading');\n\n            this.selectedFood.defaultUnit.data = unit;\n\n            var data = {\n                default_unit_id: this.selectedFood.defaultUnit.data.id,\n            };\n\n            this.$http.put('/api/foods/' + this.selectedFood.id, data).then(function (response) {\n                this.selectedFood = response;\n                $.event.trigger('provide-feedback', ['Food updated', 'success']);\n                $.event.trigger('food-updated', [response]);\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         */\n        updateCalories: function (unit) {\n            $.event.trigger('show-loading');\n\n            var data = {\n                updatingCalories: true,\n                unit_id: unit.id,\n                calories: unit.calories\n            };\n\n            this.$http.put('/api/foods/' + this.selectedFood.id, data).then(function (response) {\n                $.event.trigger('provide-feedback', ['Calories updated', 'success']);\n                $.event.trigger('food-updated', [response]);\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n        *\n        */\n        getUnits: function () {\n            $.event.trigger('show-loading');\n            this.$http.get('/api/foodUnits?includeCaloriesForSpecificFood=true&food_id=' + this.selectedFood.id).then(function (response) {\n                this.units = response;\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         * @param $event\n         */\n        closePopup: function ($event) {\n            if ($event.target.className === 'popup-outer') {\n                this.showPopup = false;\n            }\n        },\n\n        /**\n         *\n         */\n        listen: function () {\n            var that = this;\n            $(document).on('show-food-popup', function (event, food) {\n                that.selectedFood = food;\n                that.getUnits();\n                that.showPopup = true;\n            });\n        },\n\n        /**\n         *\n         * @param response\n         */\n        handleResponseError: function (response) {\n            $.event.trigger('response-error', [response]);\n            this.showLoading = false;\n        }\n    },\n    props: [\n        //data to be received from parent\n    ],\n    ready: function () {\n        this.listen();\n    }\n});\n","module.exports = {\n    template: '#food-units-page-template',\n    data: function () {\n        return {\n            units: [],\n            newUnit: {}\n        };\n    },\n    components: {},\n    methods: {\n\n        /**\n         *\n         */\n        getUnits: function () {\n            $.event.trigger('show-loading');\n            this.$http.get('/api/foodUnits').then(function (response) {\n                this.units = response;\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         */\n        insertUnit: function () {\n            $.event.trigger('show-loading');\n            var data = {\n                name: this.newUnit.name\n            };\n\n            this.$http.post('/api/foodUnits', data).then(function (response) {\n                this.units.push(response);\n                $.event.trigger('provide-feedback', ['Unit created', 'success']);\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         */\n        deleteUnit: function (unit) {\n            if (confirm(\"Are you sure?\")) {\n                $.event.trigger('show-loading');\n                this.$http.delete('/api/foodUnits/' + unit.id).then(function (response) {\n                    this.units = _.without(this.units, unit);\n                    //var index = _.indexOf(this.units, _.findWhere(this.units, {id: this.unit.id}));\n                    //this.units = _.without(this.units, this.units[index]);\n                    $.event.trigger('provide-feedback', ['Unit deleted', 'success']);\n                    $.event.trigger('hide-loading');\n                }, function (response) {\n                    HelpersRepository.handleResponseError(response);\n                });\n            }\n        },\n\n        /**\n         *\n         * @param response\n         */\n        handleResponseError: function (response) {\n            $.event.trigger('response-error', [response]);\n            this.showLoading = false;\n        }\n    },\n    props: [\n        //data to be received from parent\n    ],\n    ready: function () {\n        this.getUnits();\n    }\n};\n\n","module.exports = {\n    template: '#foods-page-template',\n    data: function () {\n        return {\n            calories: {},\n            newItem: {},\n            foods: [],\n            foodsFilter: '',\n            newFood: {}\n        };\n    },\n    components: {},\n    methods: {\n\n        /**\n         *\n         */\n        getFoods: function () {\n            $.event.trigger('show-loading');\n            this.$http.get('/api/foods').then(function (response) {\n                this.foods = response;\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         */\n        //getMenu: function () {\n        //    if ($scope.foods.length > 0 && $scope.recipes.length > 0) {\n        //        $scope.menu = select.getMenu($scope.foods, $scope.recipes);\n        //    }\n        //},\n\n        /**\n         *\n         */\n        getFood: function (food) {\n            $.event.trigger('show-loading');\n            this.$http.get('/api/foods/' + food.id).then(function (response) {\n                $.event.trigger('show-food-popup', [response]);\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         */\n        insertFood: function () {\n            $.event.trigger('show-loading');\n            var data = {\n                name: this.newFood.name\n            };\n\n            this.$http.post('/api/foods', data).then(function (response) {\n                this.foods.push(response);\n                $.event.trigger('provide-feedback', ['Food created', 'success']);\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         */\n        deleteFood: function (food) {\n            if (confirm(\"Are you sure?\")) {\n                $.event.trigger('show-loading');\n                this.$http.delete('/api/foods/' + food.id).then(function (response) {\n                    this.foods = _.without(this.foods, food);\n                    $.event.trigger('provide-feedback', ['Food deleted', 'success']);\n                    $.event.trigger('hide-loading');\n                }, function (response) {\n                    HelpersRepository.handleResponseError(response);\n                });\n            }\n        },\n\n        /**\n         *\n         */\n        listen: function () {\n            var that = this;\n            $(document).on('food-updated', function (event, food) {\n                var index = _.indexOf(that.foods, _.findWhere(that.foods, {id: food.id}));\n                that.foods[index].name = food.name;\n                that.foods[index].defaultUnit = food.defaultUnit;\n                that.foods[index].defaultCalories = food.defaultCalories;\n            });\n        },\n\n        /**\n         *\n         * @param response\n         */\n        handleResponseError: function (response) {\n            $.event.trigger('response-error', [response]);\n            this.showLoading = false;\n        }\n    },\n    props: [\n        //data to be received from parent\n    ],\n    ready: function () {\n        $(\".wysiwyg\").wysiwyg();\n        this.getFoods();\n        this.listen();\n    }\n};\n\n\n\n\n\n\n","module.exports = {\n    template: '#menu-entries-template',\n    data: function () {\n        return {\n            menuEntries: menuEntries,\n            temporaryRecipePopup: {},\n            selected: {\n                dropdown_item: {},\n                food: {},\n                unit: {}\n            }\n        };\n    },\n    components: {},\n    methods: {\n\n        /**\n         *\n         */\n        deleteMenuEntry: function (entry) {\n            if (confirm(\"Are you sure?\")) {\n                $.event.trigger('show-loading');\n                this.$http.delete('/api/menuEntries/' + entry.id).then(function (response) {\n                    this.menuEntries = _.without(this.menuEntries, entry);\n                    $.event.trigger('provide-feedback', ['MenuEntry deleted', 'success']);\n                    $.event.trigger('menu-entry-deleted');\n                    $.event.trigger('hide-loading');\n                }, function (response) {\n                    HelpersRepository.handleResponseError(response);\n                });\n            }\n        },\n\n        /**\n         *\n         */\n        getEntriesForTheDay: function () {\n            $.event.trigger('show-loading');\n            this.$http.get('/api/menuEntries/' + this.date.sql).then(function (response) {\n                this.menuEntries = response.data;\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         */\n        listen: function () {\n            var that = this;\n            $(document).on('menu-entry-added', function (event, entry) {\n                $.event.trigger('show-loading');\n                if (entry.date === that.date.sql) {\n                    that.menuEntries.push(entry)\n                }\n            });\n            $(document).on('date-changed', function (event) {\n                that.getEntriesForTheDay();\n            });\n        },\n\n        /**\n         *\n         * @param response\n         */\n        handleResponseError: function (response) {\n            $.event.trigger('response-error', [response]);\n            this.showLoading = false;\n        }\n    },\n    props: [\n        'date'\n    ],\n    ready: function () {\n        this.listen();\n    }\n};\n\n\n","module.exports = {\n    template: '#new-food-entry-template',\n    data: function () {\n        return {\n            newIngredient: {\n                food: {\n                    units: {\n                        data: []\n                    },\n                    defaultUnit: {\n                        data: {}\n                    }\n                },\n                unit: {}\n            }\n        };\n    },\n    components: {},\n    methods: {\n\n        /**\n         *\n         */\n        addIngredientToRecipe: function () {\n            if (this.recipeIsTemporary) {\n                $.event.trigger('add-ingredient-to-temporary-recipe', [this.newIngredient]);\n            }\n            else {\n                $.event.trigger('show-loading');\n\n                var data = {\n                    addIngredient: true,\n                    food_id: this.newIngredient.food.id,\n                    unit_id: this.newIngredient.unit.id,\n                    quantity: this.newIngredient.quantity,\n                    description: this.newIngredient.description\n                };\n\n                this.$http.put('/api/recipes/' + this.selectedRecipe.id, data).then(function (response) {\n                    this.selectedRecipe.ingredients.data.push({\n                        food: {\n                            data: {\n                                name: this.newIngredient.food.name\n                            }\n                        },\n                        unit: {\n                            data: {\n                                name: this.newIngredient.unit.name\n                            }\n                        },\n                        quantity: this.newIngredient.quantity,\n                        description: this.newIngredient.description,\n                    });\n                    $.event.trigger('provide-feedback', ['Food added', 'success']);\n                    $.event.trigger('hide-loading');\n                }, function (response) {\n                    HelpersRepository.handleResponseError(response);\n                });\n            }\n        },\n\n\n        /**\n         *\n         * @param response\n         */\n        handleResponseError: function (response) {\n            $.event.trigger('response-error', [response]);\n            this.showLoading = false;\n        }\n    },\n    props: [\n        'date',\n        'selectedRecipe',\n        'recipeIsTemporary'\n    ],\n    events: {\n        'option-chosen': function (option) {\n            this.newIngredient.food = option;\n            this.newIngredient.unit = option.defaultUnit.data;\n        }\n    },\n    ready: function () {\n\n    }\n};","module.exports = {\n    template: '#new-menu-entry-template',\n    data: function () {\n        return {\n            newIngredient: {\n                food: {\n                    units: {\n                        data: []\n                    },\n                    defaultUnit: {\n                        data: {}\n                    }\n                },\n                unit: {},\n                type: ''\n            },\n            recipeEntry: {},\n            entryNumberForRecipe: 0\n        };\n    },\n    components: {},\n    methods: {\n\n        /**\n         *\n         */\n        insertMenuEntry: function () {\n            $.event.trigger('show-loading');\n            var data = {\n                date: this.date.sql,\n                food_id: this.newIngredient.food.id,\n                unit_id: this.newIngredient.unit.id,\n                quantity: this.newIngredient.quantity,\n            };\n\n            $.event.trigger('get-entries');\n\n            $(\"#new-menu-entry-food\").focus();\n\n            this.$http.post('/api/menuEntries', data).then(function (response) {\n                this.newIngredient.description = '';\n                this.newIngredient.quantity = '';\n                $(\"#new-ingredient-food-name\").focus();\n                $.event.trigger('provide-feedback', ['Menu entry created', 'success']);\n                $.event.trigger('menu-entry-added', [response]);\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         * @param ingredient\n         */\n        insertEntry: function (ingredient) {\n            var data = {\n                date: this.date.sql,\n                food_id: ingredient.food.data.id,\n                recipe_id: this.recipeEntry.id,\n                unit_id: ingredient.unit.data.id,\n                quantity: ingredient.quantity,\n            };\n\n            this.$http.post('/api/menuEntries', data).then(function (response) {\n                //This adds the entry to the entries with the JS\n                $.event.trigger('menu-entry-added', [response]);\n                this.entryNumberForRecipe++;\n                //If it's the last of the entries for the recipe being added, do stuff\n                if (this.entryNumberForRecipe == this.recipeEntry.ingredients.data.length) {\n                    $.event.trigger('provide-feedback', ['Recipe entries created', 'success']);\n                    //I think this just updates the calorie info for the day\n                    $.event.trigger('get-entries');\n                    $.event.trigger('hide-loading');\n                }\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         * Insert each entry for a recipe, one at a time\n         * @param recipe\n         */\n        insertEntriesForRecipe: function (recipe) {\n            $.event.trigger('show-loading');\n\n            this.entryNumberForRecipe = 0;\n            this.recipeEntry = recipe;\n\n            for (var i = 0; i < recipe.ingredients.data.length; i++) {\n                this.insertEntry(recipe.ingredients.data[i]);\n            }\n        },\n\n        /**\n         *\n         */\n        listen: function () {\n            var that = this;\n            $(document).on('insert-entries-for-recipe', function (event, recipe) {\n                that.insertEntriesForRecipe(recipe);\n            });\n        },\n\n        /**\n         *\n         * @param response\n         */\n        handleResponseError: function (response) {\n            $.event.trigger('response-error', [response]);\n            this.showLoading = false;\n        }\n    },\n    props: [\n        'date'\n    ],\n    events: {\n        'option-chosen': function (option) {\n            if (option.type === 'food') {\n                this.newIngredient.food = option;\n                this.newIngredient.type = 'food';\n                if (option.defaultUnit) {\n                    this.newIngredient.unit = option.defaultUnit.data;\n                }\n            }\n            else if (option.type === 'recipe') {\n                this.newIngredient = option;\n                $.event.trigger('show-temporary-recipe-popup', [option]);\n            }\n        }\n    },\n    ready: function () {\n        this.listen();\n    }\n};","var NewQuickRecipe = Vue.component('new-quick-recipe', {\n    template: '#new-quick-recipe-template',\n    data: function () {\n        return {\n            errors: {},\n            showPopup: false,\n            showHelp: false,\n            newRecipe: {\n                similarNames: []\n            },\n            similarNames: [],\n        };\n    },\n    components: {},\n    methods: {\n\n        /**\n         *\n         */\n        toggleHelp: function () {\n            this.showHelp = !this.showHelp;\n        },\n\n        /**\n         * End goal of the function:\n         * Call RecipesFactory.insertQuickRecipe, with $check_similar_names as true.\n         * Send the contents, steps, and name of new recipe.\n         *\n         * The PHP checks for similar names and returns similar names if found.\n         * The JS checks for similar names in the response.\n         *\n         * If they exist, a popup shows.\n         * From there, the user can click a button\n         * which fires quickRecipeFinish,\n         * sending the recipe info again\n         * but this time without the similar name check.\n         *\n         * If none exist, the recipe should have been entered with the PHP\n         * and things should update accordingly on the page.\n         */\n        respondToEnterRecipeBtnClick: function () {\n            //remove any previous error styling so it doesn't wreck up the html\n            $(\"#quick-recipe > *\").removeAttr(\"style\");\n            $(\"#quick-recipe-errors\").hide();\n\n            var arrayOfIngredientsAndSteps = RecipesRepository.getArrayOfIngredientsAndSteps();\n\n            this.addPropertiesToRecipe(arrayOfIngredientsAndSteps);\n            RecipesRepository.modifyQuickRecipeHtml(arrayOfIngredientsAndSteps);\n            this.checkForAndHandleErrors();\n\n            if (this.errors.length < 1) {\n                //Prompt the user for the recipe name\n                this.newRecipe.name = prompt('name your recipe');\n\n                //If the user changes their mind and cancels\n                if (!this.newRecipe.name) {\n                    return;\n                }\n\n                this.checkForSimilarNames();\n            }\n            else {\n                $(\"#quick-recipe-errors\").show();\n            }\n        },\n\n        /**\n        *\n        */\n        showNewRecipeFields: function () {\n            this.addingNewRecipe = true;\n            this.editingRecipe = false;\n        },\n\n        /**\n         *\n         */\n        checkForSimilarNames: function () {\n            $.event.trigger('show-loading');\n\n            var data = {\n                ingredients: this.newRecipe.ingredients\n            };\n\n            this.$http.get('/api/quickRecipes/checkForSimilarNames', data).then(function (response) {\n                $.event.trigger('hide-loading');\n                this.similarNames = response;\n\n                if (response.units || response.foods) {\n                    $.event.trigger('provide-feedback', ['Similar names were found', 'success']);\n                    this.showPopup = true;\n                }\n                else {\n                    this.insertRecipe();\n                }\n\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         */\n        insertRecipe: function () {\n            $.event.trigger('show-loading');\n            if (this.similarNames.foods || this.similarNames.units) {\n                this.chooseCorrectFoodName();\n                this.chooseCorrectUnitName();\n                this.showPopup = false;\n            }\n\n            var data = {\n                name: this.newRecipe.name,\n                ingredients: this.newRecipe.ingredients,\n                steps: this.newRecipe.steps,\n                checkForSimilarNames: this.checkForSimilarNames\n            };\n\n            this.$http.post('/api/quickRecipes', data).then(function (response) {\n                $.event.trigger('provide-feedback', ['Recipe created', 'success']);\n                $.event.trigger('hide-loading');\n                this.recipes.push(response.data);\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         */\n        chooseCorrectFoodName: function () {\n            var that = this;\n            $(this.similarNames.foods).each(function () {\n                if (this.selected === this.existingFood.name) {\n                    // Use the existing food rather than creating a new food.\n                    that.newRecipe.ingredients[this.index].food = this.existingFood.name;\n                }\n            });\n        },\n\n        /**\n         *\n         */\n        chooseCorrectUnitName: function () {\n            var that = this;\n            $(this.newRecipe.similarNames.units).each(function () {\n                if (this.selected === this.existingUnit.name) {\n                    //Use the existing unit rather than creating a new unit\n                     that.newRecipe.ingredients[this.index].unit = this.existingUnit.name;\n                }\n            });\n        },\n\n        /**\n         *\n         */\n        checkForAndHandleErrors: function () {\n            this.errors = [];\n            this.errors = RecipesRepository.checkIngredientsForErrors(this.newRecipe.ingredients);\n        },\n\n        /**\n         *\n         */\n        addPropertiesToRecipe: function (arrayOfIngredientsAndSteps) {\n            this.newRecipe.ingredients = RecipesRepository.getIngredients(arrayOfIngredientsAndSteps);\n            this.newRecipe.steps = RecipesRepository.getSteps(arrayOfIngredientsAndSteps);\n            this.newRecipe.ingredients = RecipesRepository.convertIngredientStringsToObjects(this.newRecipe.ingredients);\n        },\n\n        /**\n         *\n         */\n        closePopup: function ($event) {\n            if ($event.target.className === 'popup-outer') {\n                this.showPopup = false;\n            }\n        },\n\n        /**\n         *\n         * @param response\n         */\n        handleResponseError: function (response) {\n            $.event.trigger('response-error', [response]);\n            this.showLoading = false;\n        }\n    },\n    props: [\n        'recipes'\n    ],\n    ready: function () {\n\n    }\n});\n","var RecipePopup = Vue.component('recipe-popup', {\n    template: '#recipe-popup-template',\n    data: function () {\n        return {\n            showPopup: false,\n            selectedRecipe: {\n                steps: [],\n                ingredients: []\n            },\n            newIngredient: {\n                food: {}\n            },\n            editingMethod: false\n        };\n    },\n    components: {},\n    methods: {\n\n        /**\n         *\n         */\n        listen: function () {\n            var that = this;\n            $(document).on('show-recipe-popup', function (event, recipe) {\n                that.selectedRecipe = recipe;\n                that.showPopup = true;\n            });\n            $(document).on('add-ingredient-to-recipe', function (event, ingredient) {\n                that.addIngredientToRecipe(ingredient);\n            });\n        },\n\n        /**\n        *\n        */\n        closePopup: function ($event) {\n            HelpersRepository.closePopup($event, this);\n        },\n        \n        /**\n        *\n        */\n        updateRecipe: function () {\n            $.event.trigger('show-loading');\n\n            var string = $(\"#edit-recipe-method\").html();\n            var lines = RecipesRepository.formatString(string, $(\"#edit-recipe-method\")).items;\n            var steps = [];\n\n            $(lines).each(function () {\n                steps.push(this);\n            });\n\n            this.selectedRecipe.steps = steps;\n\n            var data = {\n                name: this.selectedRecipe.name,\n                steps: this.selectedRecipe.steps,\n                tag_ids: this.selectedRecipe.tag_ids\n            };\n\n            this.$http.put('/api/recipes/' + this.selectedRecipe.id, data).then(function (response) {\n                var index = _.indexOf(this.recipes, _.findWhere(this.recipes, {id: this.selectedRecipe.id}));\n                this.recipes[index].name = response.name;\n                this.recipes[index].tags = response.tags;\n                this.recipes[index].tag_ds = response.tag_ids;\n                this.editingMethod = false;\n                this.showPopup = false;\n                $.event.trigger('provide-feedback', ['Recipe updated', 'success']);\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n        *\n        */\n        deleteIngredientFromRecipe: function (ingredient) {\n            $.event.trigger('show-loading');\n\n            var data = {\n                removeIngredient: true,\n                food_id: ingredient.food.data.id,\n                unit_id: ingredient.unit.data.id\n            };\n\n            this.$http.put('/api/recipes/' + this.selectedRecipe.id, data).then(function (response) {\n                this.selectedRecipe.ingredients.data = _.without(this.selectedRecipe.ingredients.data, ingredient);\n                $.event.trigger('provide-feedback', ['Ingredient removed from recipe', 'success']);\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         */\n        toggleEditMethod: function () {\n            //Toggle the visibility of the wysywig\n            this.editingMethod = !this.editingMethod;\n\n            //If we are editing the recipe, prepare the html of the wysiwyg\n            if (this.editingMethod) {\n                var text;\n                var string = \"\";\n\n                //convert the array into a string so I can make the wysiwyg display the steps\n                $(this.selectedRecipe.steps).each(function () {\n                    text = this.text;\n                    text = text + '<br>';\n                    string+= text;\n                });\n                $(\"#edit-recipe-method\").html(string);\n            }\n        },\n\n        /**\n         *\n         * @param response\n         */\n        handleResponseError: function (response) {\n            $.event.trigger('response-error', [response]);\n            this.showLoading = false;\n        }\n    },\n    props: [\n        'tags',\n        'recipes'\n    ],\n    ready: function () {\n        this.listen();\n    }\n});\n","var RecipeTags = Vue.component('recipe-tags', {\n    template: '#recipe-tags-template',\n    data: function () {\n        return {\n            newTag: {}\n        };\n    },\n    components: {},\n\n    methods: {\n\n        /**\n        *\n        */\n        insertTag: function () {\n            $.event.trigger('show-loading');\n            var data = {\n                name: this.newTag.name\n            };\n\n            this.$http.post('/api/recipeTags', data).then(function (response) {\n                this.tags.push(response.data);\n                $.event.trigger('provide-feedback', ['Tag created', 'success']);\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n        *\n        */\n        deleteTag: function (tag) {\n            if (confirm(\"Are you sure?\")) {\n                $.event.trigger('show-loading');\n                this.$http.delete('/api/recipeTags/' + tag.id).then(function (response) {\n                    this.tags = _.without(this.tags, tag);\n                    $.event.trigger('provide-feedback', ['Tag deleted', 'success']);\n                    //this.$broadcast('provide-feedback', 'Tag deleted', 'success');\n                    $.event.trigger('hide-loading');\n                }, function (response) {\n                    HelpersRepository.handleResponseError(response);\n                });\n            }\n        },\n\n        /**\n         *\n         * @param response\n         */\n        handleResponseError: function (response) {\n            $.event.trigger('response-error', [response]);\n            this.showLoading = false;\n        }\n    },\n    props: [\n        'tags',\n        'recipesTagFilter'\n    ],\n    ready: function () {\n\n    }\n});\n","var Recipes = Vue.component('recipes', {\n    template: '#recipes-template',\n    data: function () {\n        return {\n            newRecipe: {},\n            recipesNameFilter: '',\n            //recipesTagFilter: ''\n        };\n    },\n    components: {},\n    filters: {\n        recipesFilter: function (recipes) {\n            var that = this;\n\n            return recipes.filter(function (recipe) {\n                var containsName = recipe.name.indexOf(that.recipesNameFilter) !== -1;\n                var containsTags = true;\n                var tagIdsForRecipe = _.pluck(recipe.tags.data, 'id');\n                var count = 0;\n\n                if (that.recipesTagFilter.length > 0) {\n                    containsTags = false;\n                    for (var i = 0; i < that.recipesTagFilter.length; i++) {\n                        if (tagIdsForRecipe.indexOf(that.recipesTagFilter[i]) !== -1) {\n                            //Recipe contains the tag\n                            count++;\n                        }\n                    }\n                    if (count === that.recipesTagFilter.length) {\n                        containsTags = true;\n                    }\n                }\n\n                return containsName && containsTags;\n            });\n        }\n    },\n    methods: {\n\n        /**\n         *\n         * @param recipe\n         */\n        showRecipePopup: function (recipe) {\n            $.event.trigger('show-loading');\n            this.$http.get('/api/recipes/' + recipe.id).then(function (response) {\n                $.event.trigger('show-recipe-popup', [response]);\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n        *\n        */\n        insertRecipe: function () {\n            $.event.trigger('show-loading');\n            var data = {\n                name: this.newRecipe.name\n            };\n\n            this.$http.post('/api/recipes', data).then(function (response) {\n                this.recipes.push(response.data);\n                $.event.trigger('provide-feedback', ['Recipe created', 'success']);\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n        *\n        */\n        showNewRecipeFields: function () {\n            this.addingNewRecipe = true;\n            this.editingRecipe = false;\n        },\n\n        /**\n        *\n        */\n        deleteRecipe: function (recipe) {\n            if (confirm(\"Are you sure?\")) {\n                $.event.trigger('show-loading');\n                this.$http.delete('/api/recipes/' + recipe.id).then(function (response) {\n                    this.recipes = _.without(this.recipes, recipe);\n                    $.event.trigger('provide-feedback', ['Recipe deleted', 'success']);\n                    $.event.trigger('hide-loading');\n                }, function (response) {\n                    HelpersRepository.handleResponseError(response);\n                });\n            }\n        },\n\n        /**\n         *\n         * @param response\n         */\n        handleResponseError: function (response) {\n            $.event.trigger('response-error', [response]);\n            this.showLoading = false;\n        }\n    },\n    props: [\n        'tags',\n        'recipesTagFilter',\n        'recipes'\n    ],\n    ready: function () {\n        $(\".wysiwyg\").wysiwyg();\n    }\n});\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//$scope.getMenu = function () {\n//    if ($scope.foods.length > 0 && $scope.recipes.length > 0) {\n//        $scope.menu = select.getMenu($scope.foods, $scope.recipes);\n//    }\n//};\n\n\n\n\n\n\n//\n//\n///**\n// * Add a unit to a food or remove the unit from the food.\n// * The method name is old and should probably be changed.\n// * @param $unit_id\n// */\n//$scope.insertOrDeleteUnitInCalories = function ($unit_id) {\n//    //Check if the checkbox is checked\n//    if ($scope.food_popup.food_units.indexOf($unit_id) === -1) {\n//        //It is now unchecked. Remove the unit from the food.\n//        FoodsFactory.deleteUnitFromCalories($scope.food_popup.food.id, $unit_id).then(function (response) {\n//            $scope.food_popup = response.data;\n//        });\n//    }\n//    else {\n//        // It is now checked. Add the unit to the food.\n//        FoodsFactory.insertUnitInCalories($scope.food_popup.food.id, $unit_id).then(function (response) {\n//            $scope.food_popup = response.data;\n//        });\n//    }\n//};\n//\n///**\n// * update\n// */\n//\n\n//\n//$scope.updateCalories = function ($keycode, $unit_id, $calories) {\n//    if ($keycode === 13) {\n//        FoodsFactory.updateCalories($scope.food_popup.food.id, $unit_id, $calories).then(function (response) {\n//            $scope.food_popup = response.data;\n//        });\n//    }\n//};\n//\n//$scope.updateDefaultUnit = function ($food_id, $unit_id) {\n//    FoodUnitsFactory.updateDefaultUnit($food_id, $unit_id).then(function (response) {\n//        $scope.food_popup = response.data;\n//    });\n//};\n\n\n","module.exports = {\n    template: '#recipes-page-template',\n    data: function () {\n        return {\n            tags: [],\n            recipes: [],\n            recipesTagFilter: []\n        };\n    },\n    components: {},\n    computed: {\n        //recipesTagFilter: function () {\n        //    return _.pluck(this.tags, 'id');\n        //}\n    },\n    methods: {\n\n        /**\n         *\n         */\n        getTags: function () {\n            $.event.trigger('show-loading');\n            this.$http.get('/api/recipeTags').then(function (response) {\n                this.tags = response;\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         */\n        getRecipes: function () {\n            $.event.trigger('show-loading');\n            this.$http.get('/api/recipes').then(function (response) {\n                this.recipes = response;\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         * @param response\n         */\n        handleResponseError: function (response) {\n            $.event.trigger('response-error', [response]);\n            this.showLoading = false;\n        }\n    },\n    props: [\n        //data to be received from parent\n    ],\n    ready: function () {\n        this.getRecipes();\n        this.getTags();\n    }\n};\n","module.exports = {\n    template: '#temporary-recipe-popup-template',\n    data: function () {\n        return {\n            showPopup: false,\n            portion: 1,\n            recipe: {\n                ingredients: {}\n            }\n        };\n    },\n    components: {},\n    methods: {\n\n        /**\n         *\n         */\n        getRecipe: function (recipe) {\n            $.event.trigger('show-loading');\n            this.$http.get('/api/recipes/' + recipe.id).then(function (response) {\n                this.recipe = response;\n\n                $(this.recipe.ingredients.data).each(function () {\n                    this.originalQuantity = this.quantity;\n                });\n\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         */\n        insertFoodIntoTemporaryRecipe: function () {\n            //we are adding a food to a temporary recipe\n            var $unit_name = $(\"#temporary-recipe-popup-unit option:selected\").text();\n            this.temporaryRecipePopup.contents.push({\n                \"food_id\": this.temporaryRecipePopup.food.id,\n                \"name\": this.temporaryRecipePopup.food.name,\n                \"quantity\": this.temporaryRecipePopup.quantity,\n                \"unit_id\": $(\"#temporary-recipe-popup-unit\").val(),\n                \"unit_name\": $unit_name,\n                \"units\": this.temporaryRecipePopup.food.units\n            });\n\n            $(\"#temporary-recipe-food-input\").val(\"\").focus();\n        },\n\n        /**\n         *\n         */\n        setRecipePortion: function () {\n            var that = this;\n            $(this.recipe.ingredients.data).each(function () {\n                if (this.originalQuantity) {\n                    //making sure we don't alter the quantity of a food\n                    //that has been added to the temporary recipe\n                    //(by doing the if check)\n                    this.quantity = this.originalQuantity * that.portion;\n                }\n            });\n        },\n\n        /**\n         *\n         */\n        deleteIngredientFromTemporaryRecipe: function (ingredient) {\n            this.recipe.ingredients.data = _.without(this.recipe.ingredients.data, ingredient);\n        },\n\n        /**\n         *\n         */\n        closePopup: function ($event) {\n            if ($event.target.className === 'popup-outer') {\n                this.showPopup = false;\n            }\n        },\n\n        /**\n         *\n         */\n        insertEntriesForRecipe: function () {\n            $.event.trigger('insert-entries-for-recipe', [this.recipe]);\n            this.showPopup = false;\n        },\n\n        /**\n         *\n         */\n        listen: function () {\n            var that = this;\n            $(document).on('show-temporary-recipe-popup', function (event, recipe) {\n                that.getRecipe(recipe);\n                that.showPopup = true;\n            });\n            $(document).on('add-ingredient-to-temporary-recipe', function (event, ingredient) {\n                console.log(ingredient);\n                console.log(that.recipe.ingredients.data[0]);\n                that.recipe.ingredients.data.push({\n                    food: {\n                        data: {\n                            id: ingredient.food.id,\n                            name: ingredient.food.name,\n                            units: {data: ingredient.food.units.data},\n                            defaultUnit: ingredient.food.defaultUnit,\n                        }\n                    },\n                    unit: {data: ingredient.unit},\n                    quantity: ingredient.quantity\n                });\n            });\n        },\n\n        /**\n         *\n         * @param response\n         */\n        handleResponseError: function (response) {\n            $.event.trigger('response-error', [response]);\n            this.showLoading = false;\n        }\n    },\n    props: [\n        //'insertEntriesForRecipe'\n    ],\n    ready: function () {\n        this.listen();\n    }\n};\n","module.exports = {\n    template: '#autocomplete-template',\n    data: function () {\n        return {\n            autocompleteOptions: [],\n            chosenOption: {\n                name: ''\n            },\n            showDropdown: false,\n            currentIndex: 0\n        };\n    },\n    components: {},\n    methods: {\n\n        /**\n         *\n         * @param keycode\n         */\n        respondToKeyup: function (keycode) {\n            if (keycode !== 13 && keycode !== 38 && keycode !== 40 && keycode !== 39 && keycode !== 37) {\n                //not enter, up, down, right or left arrows\n                this.populateOptions();\n            }\n            else if (keycode === 38) {\n                //up arrow pressed\n                if (this.currentIndex !== 0) {\n                    this.currentIndex--;\n                }\n            }\n            else if (keycode === 40) {\n                //down arrow pressed\n                if (this.autocompleteOptions.length - 1 !== this.currentIndex) {\n                    this.currentIndex++;\n                }\n            }\n            else if (keycode === 13) {\n                this.respondToEnter();\n            }\n        },\n\n        /**\n         *\n         */\n        populateOptions: function () {\n            //fill the dropdown\n            $.event.trigger('show-loading');\n            this.$http.get(this.url + '?typing=' + this.chosenOption.name, function (response) {\n                this.autocompleteOptions = response.data;\n                this.showDropdown = true;\n                this.currentIndex = 0;\n                $.event.trigger('hide-loading');\n            })\n                .error(function (response) {\n                    HelpersRepository.handleResponseError(response);\n                });\n        },\n\n        /**\n         *\n         */\n        respondToEnter: function () {\n            if (this.showDropdown) {\n                //enter is for the autocomplete\n                this.selectOption();\n            }\n            else {\n                //enter is to add the entry\n                this.insertItemFunction();\n            }\n        },\n\n        /**\n         *\n         */\n        selectOption: function () {\n            this.chosenOption = this.autocompleteOptions[this.currentIndex];\n            this.showDropdown = false;\n            if (this.idToFocusAfterAutocomplete) {\n                var that = this;\n                setTimeout(function () {\n                    $(\"#\" + that.idToFocusAfterAutocomplete).focus();\n                }, 100);\n            }\n            this.$dispatch('option-chosen', this.chosenOption);\n        },\n\n        /**\n         *\n         * @param response\n         */\n        handleResponseError: function (response) {\n            $.event.trigger('response-error', [response]);\n            this.showLoading = false;\n        }\n    },\n    props: [\n        'url',\n        'autocompleteField',\n        'insertItemFunction',\n        'idToFocusAfterAutocomplete'\n    ],\n    ready: function () {\n\n    }\n};","var DatesRepository = require('../../repositories/DatesRepository');\n// require('sugar');\n\nmodule.exports = {\n    template: '#date-navigation-template',\n    data: function () {\n        return {\n            date: store.state.date\n        };\n    },\n    components: {},\n    watch: {\n        'date.typed': function (newValue, oldValue) {\n            $(\"#date\").val(this.date.typed);\n            $.event.trigger('date-changed');\n        }\n    },\n    methods: {\n        /**\n         *\n         * @param $number\n         */\n        goToDate: function ($number) {\n            DatesRepository.goToDate($number);\n        },\n\n        /**\n         *\n         */\n        goToToday: function () {\n            DatesRepository.today();\n        },\n\n        /**\n         *\n         * @param date\n         * @returns {boolean}\n         */\n        changeDate: function (date) {\n            var date = date || $(\"#date\").val();\n            DatesRepository.changeDate(date);\n        },\n\n        /**\n         *\n         * @param response\n         */\n        handleResponseError: function (response) {\n            $.event.trigger('response-error', [response]);\n            this.showLoading = false;\n        }\n\n    },\n    props: [\n\n    ],\n    ready: function () {\n\n    }\n\n};\n","module.exports = {\n    template: \"#feedback-template\",\n    data: function () {\n        return {\n            feedbackMessages: []\n        };\n    },\n    methods: {\n        listen: function () {\n            var that = this;\n            $(document).on('provide-feedback', function (event, message, type) {\n                that.provideFeedback(message, type);\n            });\n            $(document).on('response-error', function (event, response) {\n                that.provideFeedback(that.handleResponseError(response), 'error');\n            })\n        },\n        provideFeedback: function (message, type) {\n            var newMessage = {\n                message: message,\n                type: type\n            };\n\n            var that = this;\n\n            this.feedbackMessages.push(newMessage);\n\n            setTimeout(function () {\n                that.feedbackMessages = _.without(that.feedbackMessages, newMessage);\n            }, 3000);\n        },\n        handleResponseError: function (response) {\n            if (typeof response !== \"undefined\") {\n                var $message;\n\n                switch(response.status) {\n                    case 503:\n                        $message = 'Sorry, application under construction. Please try again later.';\n                        break;\n                    case 401:\n                        $message = 'You are not logged in';\n                        break;\n                    case 422:\n                        var html = \"<ul>\";\n\n                        for (var i = 0; i < response.length; i++) {\n                            var error = response[i];\n                            for (var j = 0; j < error.length; j++) {\n                                html += '<li>' + error[j] + '</li>';\n                            }\n                        }\n\n                        html += \"</ul>\";\n                        $message = html;\n                        break;\n                    default:\n                        $message = response.error;\n                        break;\n                }\n            }\n            else {\n                $message = 'There was an error';\n            }\n\n            return $message;\n\n        }\n    },\n    events: {\n        'provide-feedback': function (message, type) {\n            this.provideFeedback(message, type);\n        },\n        'response-error': function (response) {\n            this.provideFeedback(this.handleResponseError(response), 'error');\n        }\n    },\n    ready: function () {\n        this.listen();\n    },\n};","module.exports = {\n    data: function () {\n        return {\n            showLoading: false\n        };\n    },\n    template: \"#loading-template\",\n    props: [\n        //'showLoading'\n    ],\n    methods: {\n        listen: function () {\n            var that = this;\n            $(document).on('show-loading', function (event, message, type) {\n                that.showLoading = true;\n            });\n            $(document).on('hide-loading', function (event, message, type) {\n                that.showLoading = false;\n            });\n        }\n    },\n    ready: function () {\n        this.listen();\n    }\n};","module.exports = {\n    template: '#activities-page-template',\n    data: function () {\n        return {\n            activities: [],\n            newActivity: {},\n        };\n    },\n    components: {},\n    filters: {\n        formatDuration: function (minutes) {\n            return FiltersRepository.formatDuration(minutes);\n        }\n    },\n    methods: {\n\n        /**\n         *\n         */\n        getActivities: function () {\n            $.event.trigger('show-loading');\n            this.$http.get('/api/activities').then(function (response) {\n                this.activities = response;\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         */\n        insertActivity: function () {\n            $.event.trigger('show-loading');\n            var data = {\n                name: this.newActivity.name,\n                color: this.newActivity.color\n            };\n\n            this.$http.post('/api/activities', data).then(function (response) {\n                this.activities.push(response);\n                $.event.trigger('provide-feedback', ['Activity created', 'success']);\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         * @param activity\n         */\n        showActivityPopup: function (activity) {\n            $.event.trigger('show-activity-popup', [activity]);\n        },\n\n        /**\n         *\n         * @param response\n         */\n        handleResponseError: function (response) {\n            $.event.trigger('response-error', [response]);\n            this.showLoading = false;\n        }\n    },\n    props: [\n        //data to be received from parent\n    ],\n    ready: function () {\n        this.getActivities();\n    }\n};\n","var ActivityPopup = Vue.component('activity-popup', {\n    template: '#activity-popup-template',\n    data: function () {\n        return {\n            showPopup: false,\n            selectedActivity: {}\n        };\n    },\n    components: {},\n    methods: {\n\n        /**\n         *\n         */\n        updateActivity: function () {\n            $.event.trigger('show-loading');\n\n            var data = {\n                name: this.selectedActivity.name,\n                color: this.selectedActivity.color\n            };\n\n            this.$http.put('/api/activities/' + this.selectedActivity.id, data).then(function (response) {\n                var index = _.indexOf(this.activities, _.findWhere(this.activities, {id: this.selectedActivity.id}));\n                this.activities[index] = response;\n                this.showPopup = false;\n                $.event.trigger('provide-feedback', ['Activity updated', 'success']);\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         */\n        deleteActivity: function () {\n            if (confirm(\"Are you sure? The timers for the activity will be deleted, too!\")) {\n                $.event.trigger('show-loading');\n                this.$http.delete('/api/activities/' + this.selectedActivity.id).then(function (response) {\n                    this.activities = _.without(this.activities, this.selectedActivity);\n                    this.showPopup = false;\n                    $.event.trigger('provide-feedback', ['Activity deleted', 'success']);\n                    $.event.trigger('hide-loading');\n                }, function (response) {\n                    HelpersRepository.handleResponseError(response);\n                });\n            }\n        },\n\n        /**\n        *\n        */\n        closePopup: function ($event) {\n            HelpersRepository.closePopup($event, this);\n        },\n\n        /**\n         *\n         */\n        listen: function () {\n            var that = this;\n            $(document).on('show-activity-popup', function (event, activity) {\n                that.selectedActivity = activity;\n                that.showPopup = true;\n            });\n        }\n    },\n    props: [\n        'activities'\n    ],\n    ready: function () {\n        this.listen();\n    }\n});\n","var DatesRepository = require('../../repositories/DatesRepository');\n\nmodule.exports = {\n    template: '#graphs-page-template',\n    data: function () {\n        return {\n            date: store.state.date,\n            timers: []\n        };\n    },\n    components: {},\n    methods: {\n\n        /**\n         *\n         */\n        getTimers: function () {\n            $.event.trigger('show-loading');\n            var url = TimersRepository.calculateUrl(false, this.date.sql);\n\n            this.$http.get(url).then(function (response) {\n                this.timers = response;\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         * @param response\n         */\n        handleResponseError: function (response) {\n            $.event.trigger('response-error', [response]);\n            this.showLoading = false;\n        }\n    },\n    props: [\n        //data to be received from parent\n    ],\n    ready: function () {\n        this.getTimers();\n    }\n};\n\n","module.exports = {\n    template: '#new-manual-timer-template',\n    data: function () {\n        return {\n            newManualTimer: {\n                activity: {}\n            },\n            showPopup: true\n        };\n    },\n    components: {},\n    methods: {\n        /**\n         * Instead of starting and stopping the timer,\n         * enter the start and stop times manually\n         */\n        insertManualTimer: function () {\n            $.event.trigger('show-loading');\n            var data = TimersRepository.setData(this.newManualTimer, this.date.sql);\n            $('#timer-clock').timer({format: '%H:%M:%S'});\n\n            this.$http.post('/api/timers/', data).then(function (response) {\n                this.timers.push(response);\n                console.log(router);\n                $.event.trigger('manual-timer-created');\n                $.event.trigger('provide-feedback', ['Manual entry created', 'success']);\n                $.event.trigger('hide-loading');\n                router.go('/timers');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         */\n        setDefaultActivity: function () {\n            this.newManualTimer.activity = this.activities[0];\n        },\n\n        /**\n         *\n         */\n        closePopup: function ($event) {\n            HelpersRepository.closePopup($event, this);\n        },\n\n        /**\n         *\n         */\n        listen: function () {\n            var that = this;\n            $(document).on('activities-loaded', function (event) {\n                setTimeout(function () {\n                    that.setDefaultActivity();\n                }, 500);\n            });\n\n            $(document).on('show-new-manual-timer-popup', function (event) {\n                if (that.$route.path.indexOf('/timers') !== -1) {\n                    //We're on the timers page so we can show the popup\n                    that.showPopup = true;\n                }\n                else {\n                    //Wait for the timers page to load before showing the popup\n                    setTimeout(function () {\n                        that.showPopup = true;\n                    }, 5000);\n                }\n            });\n        }\n\n    },\n    props: [\n        'activities',\n        'date',\n        'timers'\n    ],\n    ready: function () {\n        this.listen();\n        this.setDefaultActivity();\n    }\n};\n","var NewTimer = Vue.component('new-timer', {\n    template: '#new-timer-template',\n    data: function () {\n        return {\n            newTimer: {\n                activity: {}\n            },\n        };\n    },\n    components: {},\n    methods: {\n\n        /**\n         *\n         */\n        startTimer: function () {\n            $.event.trigger('show-loading');\n            var data = TimersRepository.setData(this.newTimer);\n            $('#timer-clock').timer({format: '%H:%M:%S'});\n\n            this.$http.post('/api/timers/', data).then(function (response) {\n                this.timerInProgress = response;\n                $.event.trigger('provide-feedback', ['Timer started', 'success']);\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         */\n        stopTimer: function () {\n            $.event.trigger('show-loading');\n            $('#timer-clock').timer('remove');\n\n            var data = {\n                finish: TimersRepository.calculateFinishTime(this.timerInProgress)\n            };\n\n            this.$http.put('/api/timers/' + this.timerInProgress.id, data).then(function (response) {\n                this.timerInProgress = false;\n                this.timers.push(response);\n                $.event.trigger('timer-stopped');\n                $.event.trigger('provide-feedback', ['Timer updated', 'success']);\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         */\n        setDefaultActivity: function () {\n            this.newTimer.activity = this.activities[0];\n        },\n\n        /**\n         *\n         */\n        checkForTimerInProgress: function () {\n            $.event.trigger('show-loading');\n            this.$http.get('/api/timers/checkForTimerInProgress').then(function (response) {\n                if (response.activity) {\n                    this.resumeTimerOnPageLoad(response);\n                }\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         * @param timer\n         */\n        resumeTimerOnPageLoad: function (timer) {\n            this.timerInProgress = timer;\n            var seconds = moment().diff(moment(timer.start, 'YYYY-MM-DD HH:mm:ss'), 'seconds');\n            $('#timer-clock').timer({\n                format: '%H:%M:%S',\n                //The timer has already started\n                seconds: seconds\n            });\n        },\n\n        /**\n         *\n         */\n        listen: function () {\n            var that = this;\n            $(document).on('activities-loaded', function (event) {\n                setTimeout(function () {\n                    that.setDefaultActivity();\n                }, 500);\n            });\n        }\n\n    },\n    props: [\n        'activities',\n        'timerInProgress',\n        'showTimerInProgress',\n        'timers'\n    ],\n    ready: function () {\n        this.listen();\n        this.checkForTimerInProgress();\n    }\n});\n","var TimerPopup = Vue.component('timer-popup', {\n    template: '#timer-popup-template',\n    data: function () {\n        return {\n            showPopup: false,\n            selectedTimer: {\n                id: '',\n                start: '',\n                finish: '',\n                activity: {\n                    data: {}\n                }\n            }\n        };\n    },\n    components: {},\n    methods: {\n\n        /**\n        *\n        */\n        updateTimer: function () {\n            $.event.trigger('show-loading');\n\n            var data = {\n                start: this.selectedTimer.start,\n                finish: this.selectedTimer.finish,\n                activity_id: this.selectedTimer.activity.data.id\n            };\n\n            this.$http.put('/api/timers/' + this.selectedTimer.id, data).then(function (response) {\n                var index = _.indexOf(this.timers, _.findWhere(this.timers, {id: this.selectedTimer.id}));\n                this.timers[index].start = response.start;\n                this.timers[index].finish = response.finish;\n                this.timers[index].activity = response.activity;\n                $.event.trigger('provide-feedback', ['Timer updated', 'success']);\n                this.showPopup = false;\n                $.event.trigger('hide-loading');\n            }, function (data, status, response) {\n                HelpersRepository.handleResponseError(data, status, response);\n            });\n        },\n\n        /**\n         *\n         */\n        deleteTimer: function () {\n            if (confirm(\"Are you sure?\")) {\n                $.event.trigger('show-loading');\n                this.$http.delete('/api/timers/' + this.selectedTimer.id).then(function (response) {\n                    $.event.trigger('timer-deleted', [this.selectedTimer]);\n                    this.showPopup = false;\n                    $.event.trigger('provide-feedback', ['Timer deleted', 'success']);\n                    $.event.trigger('hide-loading');\n                }, function (response) {\n                    HelpersRepository.handleResponseError(response);\n                });\n            }\n        },\n\n        /**\n        *\n        */\n        closePopup: function ($event) {\n            HelpersRepository.closePopup($event, this);\n        },\n\n        /**\n         *\n         */\n        listen: function () {\n            var that = this;\n            $(document).on('show-timer-popup', function (event, timer) {\n                //So that the timer doesn't appear updated if the user closes the popup without saving\n                that.selectedTimer.id = timer.id;\n                that.selectedTimer.start = timer.start;\n                that.selectedTimer.finish = timer.finish;\n                that.selectedTimer.activity = timer.activity;\n                that.showPopup = true;\n            });\n        }\n    },\n    props: [\n        'activities',\n        'timers'\n    ],\n    ready: function () {\n        this.listen();\n    }\n});\n","module.exports = {\n    template: '#timers-page-template',\n    data: function () {\n        return {\n            date: store.state.date,\n            timers: [],\n            activities: [],\n            timersFilter: false,\n            activitiesFilter: '',\n            activitiesWithDurationsForTheWeek: [],\n            activitiesWithDurationsForTheDay: [],\n            timerInProgress: false,\n            showTimerInProgress: true,\n        };\n    },\n    filters: {\n        formatDateTime: function (dateTime, format) {\n            if (!format) {\n                return moment(dateTime, 'YYYY-MM-DD HH:mm:ss').format('hh:mm:ssa DD/MM');\n            }\n            else if (format === 'seconds') {\n                return moment(dateTime, 'YYYY-MM-DD HH:mm:ss').format('ss a DD/MM');\n            }\n            else if (format === 'hoursAndMinutes') {\n                return moment(dateTime, 'YYYY-MM-DD HH:mm:ss').format('hh:mm');\n            }\n            else if (format === 'object') {\n                return {\n                    seconds: moment(dateTime, 'YYYY-MM-DD HH:mm:ss').format('ss')\n                };\n            }\n        },\n        doubleDigits: function (number) {\n            if (number < 10) {\n                return '0' + number;\n            }\n\n            return number;\n        },\n        formatDuration: function (minutes) {\n            return FiltersRepository.formatDuration(minutes);\n        }\n    },\n    components: {},\n    methods: {\n\n        /**\n         *\n         * @param timer\n         */\n        showTimerPopup: function (timer) {\n            $.event.trigger('show-timer-popup', [timer]);\n        },\n\n        /**\n         *\n         */\n        getActivities: function () {\n            $.event.trigger('show-loading');\n            this.$http.get('/api/activities').then(function (response) {\n                this.activities = response;\n                $.event.trigger('activities-loaded');\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         */\n        getTimers: function () {\n            $.event.trigger('show-loading');\n            var url = TimersRepository.calculateUrl(false, this.date.sql);\n\n            this.$http.get(url).then(function (response) {\n                this.timers = response;\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         * @param timer\n         * @returns {boolean}\n         */\n        filterTimers: function (timer) {\n            if (this.timersFilter) {\n                return timer.activity.data.name.indexOf(this.timersFilter) !== -1;\n            }\n            return true;\n\n        },\n\n        /**\n         *\n         * @param minutes\n         * @returns {number}\n         */\n        formatMinutes: function (minutes) {\n            return minutes * 10;\n        },\n\n        /**\n         *\n         */\n        getTotalMinutesForActivitiesForTheDay: function () {\n            $.event.trigger('show-loading');\n            this.$http.get('/api/activities/getTotalMinutesForDay?date=' + this.date.sql).then(function (response) {\n                this.activitiesWithDurationsForTheDay = response;\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         */\n        getTotalMinutesForActivitiesForTheWeek: function () {\n            $.event.trigger('show-loading');\n            this.$http.get('/api/activities/getTotalMinutesForWeek?date=' + this.date.sql).then(function (response) {\n                this.activitiesWithDurationsForTheWeek = response;\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        ///**\n        // *\n        // */\n        //showNewManualTimerPopup: function () {\n        //    $.event.trigger('show-new-manual-timer-popup');\n        //},\n\n        /**\n         *\n         */\n        listen: function () {\n            var that = this;\n            $(document).on('date-changed', function (event) {\n                that.getTimers();\n                that.getTotalMinutesForActivitiesForTheDay();\n                that.getTotalMinutesForActivitiesForTheWeek();\n            });\n\n            $(document).on('timer-deleted', function (event, timer) {\n                var index = HelpersRepository.findIndexById(that.timers, timer.id);\n                that.timers = _.without(that.timers, that.timers[index]);\n                that.getTotalMinutesForActivitiesForTheDay();\n                that.getTotalMinutesForActivitiesForTheWeek();\n            });\n\n            $(document).on('timer-stopped', function (event) {\n                that.getTotalMinutesForActivitiesForTheDay();\n                that.getTotalMinutesForActivitiesForTheWeek();\n            });\n\n            $(document).on('manual-timer-created', function (event) {\n                that.getTotalMinutesForActivitiesForTheDay();\n                that.getTotalMinutesForActivitiesForTheWeek();\n            });\n        },\n\n        /**\n         *\n         * @param response\n         */\n        handleResponseError: function (response) {\n            $.event.trigger('response-error', [response]);\n            $.event.trigger('hide-loading');\n        }\n    },\n    props: [\n        //data to be received from parent\n    ],\n    ready: function () {\n        this.getActivities();\n        this.getTimers();\n        this.getTotalMinutesForActivitiesForTheDay();\n        this.getTotalMinutesForActivitiesForTheWeek();\n        this.listen();\n    }\n};","var DatesRepository = require('../repositories/DatesRepository');\nvar FiltersRepository = require('../repositories/FiltersRepository');\n\nmodule.exports = {\n    template: '#entries-page-template',\n    data: function () {\n        return {\n            date: store.state.date,\n            calories: {\n                day: caloriesForTheDay,\n                averageFor7Days: calorieAverageFor7Days,\n            }\n        }\n    },\n    components: {},\n    filters: {\n        roundNumber: function (number, howManyDecimals) {\n            return FiltersRepository.roundNumber(number, howManyDecimals);\n        }\n    },\n    methods: {\n        /**\n         *\n         */\n        mediaQueries: function () {\n            // enquire.register(\"screen and (max-width: 890px\", {\n            //     match: function () {\n            //         $(\"#avg-calories-for-the-week-text\").text('Avg: ');\n            //     },\n            //     unmatch: function () {\n            //         $(\"#avg-calories-for-the-week-text\").text('Avg calories (last 7 days): ');\n            //     }\n            // });\n        },\n\n        /**\n         * Get all the user's entries for the current date:\n         * exercise entries\n         * menu entries\n         * weight\n         * calories for the day\n         * calorie average for the week\n         */\n        //getEntries: function () {\n        //    $.event.trigger('get-entries');\n        //},\n\n        /**\n         * Get calories for the day and average calories for 7 days\n         */\n        getCalorieInfoForTheDay: function () {\n            $.event.trigger('show-loading');\n            this.$http.get('api/calories/' + this.date.sql).then(function (response) {\n                this.calories.day = response.data.forTheDay;\n                this.calories.averageFor7Days = response.data.averageFor7Days;\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         */\n        listen: function () {\n            var that = this;\n            $(document).on('get-entries', function (event) {\n                that.getCalorieInfoForTheDay();\n            });\n            $(document).on('date-changed', function (event) {\n                that.getCalorieInfoForTheDay();\n            });\n            $(document).on('menu-entry-added, menu-entry-deleted', function (event) {\n                that.getCalorieInfoForTheDay();\n            });\n        },\n\n        /**\n         *\n         * @param response\n         */\n        handleResponseError: function (response) {\n            $.event.trigger('response-error', [response]);\n            this.showLoading = false;\n        }\n    },\n    props: [\n        //data to be received from parent\n    ],\n    ready: function () {\n        $(\"#food\").val(\"\");\n        this.mediaQueries();\n        this.listen();\n    }\n};","require('bootstrap');\n//This didn't work\n// require('bootstrap-wysiwyg');\nvar MediumEditor = require('medium-editor');\n// require('summernote');\n\nmodule.exports = {\n    template: '#journal-page-template',\n    data: function () {\n        return {\n            date: store.state.date,\n            filterResults: [],\n            journalEntry: {},\n        };\n    },\n    components: {},\n    methods: {\n        /**\n         *\n         */\n        getJournalEntry: function () {\n            $.event.trigger('show-loading');\n            this.$http.get('api/journal/' + this.date.sql).then(function (response) {\n                this.journalEntry = response.data.data;\n                this.$nextTick(function () {\n                    var editor = new MediumEditor('.wysiwyg', {\n                        // placeholder: false\n                    });\n                });\n\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         * @param entry\n         */\n        selectJournalEntryFromFilterResults: function (entry) {\n            this.date = {\n                typed: entry.date,\n                sql: moment(entry.date, 'DD/MM/YY').format('YYYY-MM-DD HH:mm:ss')\n            }\n            this.getJournalEntry();\n        },\n\n        /**\n         *\n         */\n        filterJournalEntries: function () {\n            var typing = $(\"#filter-journal\").val();\n\n            $.event.trigger('show-loading');\n            this.$http.get('/api/journal?typing=' + typing, function (response) {\n                this.filterResults = response.data;\n                $.event.trigger('hide-loading');\n            })\n                .error(function (response) {\n                    HelpersRepository.handleResponseError(response);\n                });\n        },\n\n        /**\n         *\n         */\n        clearFilterResults: function () {\n            this.filterResults = [];\n            $(\"#filter-journal\").val(\"\");\n        },\n\n        /**\n         * If the id of the journal entry exists, update the entry.\n         * If not, insert the entry.\n         */\n        insertOrUpdateJournalEntry: function () {\n            if (this.journalEntry.id) {\n                this.updateEntry();\n            }\n            else {\n                this.insertEntry();\n            }\n        },\n\n        /**\n         *\n         */\n        showNewSleepEntryPopup: function () {\n            $.event.trigger('show-new-sleep-entry-popup');\n        },\n\n        /**\n         *\n         */\n        updateEntry: function () {\n            $.event.trigger('show-loading');\n\n            var data = {\n                text: $(\"#journal-entry\").html()\n            };\n\n            this.$http.put('/api/journal/' + this.journalEntry.id, data).then(function (response) {\n                this.journalEntry = response.data.data;\n                $.event.trigger('provide-feedback', ['Entry updated', 'success']);\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         */\n        insertEntry: function () {\n            $.event.trigger('show-loading');\n            var data = {\n                date: this.date.sql,\n                text: $(\"#journal-entry\").html()\n            };\n\n            this.$http.post('/api/journal', data).then(function (response) {\n                this.journalEntry = response.data.data;\n                $.event.trigger('provide-feedback', ['Entry created', 'success']);\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         */\n        listen: function () {\n            var that = this;\n            $(document).on('date-changed', function (event) {\n                that.getJournalEntry();\n            });\n        },\n\n        /**\n         *\n         * @param response\n         */\n        handleResponseError: function (response) {\n            $.event.trigger('response-error', [response]);\n            this.showLoading = false;\n        }\n    },\n    props: [\n        //data to be received from parent\n    ],\n    ready: function () {\n        // $(\".wysiwyg\").wysiwyg();\n\n        // new MediumEditor('.editable');\n        // $('.wysiwyg').summernote();\n        this.listen();\n        this.getJournalEntry();\n    }\n};\n\n","module.exports = {\n    template: '#new-sleep-entry-template',\n    data: function () {\n        return {\n            date: store.state.date,\n            newSleepEntry: {\n                startedYesterday: true\n            },\n            showPopup: false\n        };\n    },\n    components: {},\n    methods: {\n        /**\n         *\n         */\n        insertSleepEntry: function () {\n            $.event.trigger('show-loading');\n            var data = TimersRepository.setData(this.newSleepEntry, this.date.sql);\n\n            this.$http.post('/api/timers', data).then(function (response) {\n                this.showPopup = false;\n                $.event.trigger('provide-feedback', ['Sleep entry created', 'success']);\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         */\n        closePopup: function ($event) {\n            HelpersRepository.closePopup($event, this);\n        },\n\n        /**\n         *\n         */\n        listen: function () {\n            var that = this;\n            $(document).on('show-new-sleep-entry-popup', function (event) {\n                that.showPopup = true;\n            });\n        }\n    },\n    props: [\n        //data to be received from parent\n    ],\n    ready: function () {\n        this.listen();\n    }\n};\n","var Vue = require('vue');\n\nmodule.exports = {\n    template: '#weight-template',\n    data: function () {\n        return {\n            weight: {},\n            editingWeight: false,\n            addingNewWeight: false,\n            newWeight: {},\n            store: store.state\n        };\n    },\n    computed: {\n        date: function () {\n          return this.store.date;\n        }\n    },\n    components: {},\n    filters: {\n        roundNumber: function (number, howManyDecimals) {\n            return FiltersRepository.roundNumber(number, howManyDecimals);\n        }\n    },\n    methods: {\n\n        /**\n         *\n         */\n        showNewWeightOrEditWeightFields: function () {\n            if (this.weight.id) {\n                this.showEditWeightFields();\n            }\n            else {\n                this.showNewWeightFields();\n            }\n        },\n\n        /**\n         *\n         */\n        insertWeight: function () {\n            $.event.trigger('show-loading');\n            var data = {\n                date: this.date.sql,\n                weight: this.newWeight.weight\n            };\n\n            this.$http.post('/api/weights', data).then(function (response) {\n                this.weight = response.data;\n                this.addingNewWeight = false;\n                $.event.trigger('provide-feedback', ['Weight created', 'success']);\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         */\n        updateWeight: function () {\n            $.event.trigger('show-loading');\n\n            var data = {\n                weight: this.weight.weight\n            };\n\n            this.$http.put('/api/weights/' + this.weight.id, data).then(function (response) {\n                this.weight = response.data;\n                this.editingWeight = false;\n                $.event.trigger('provide-feedback', ['Weight updated', 'success']);\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         */\n        showNewWeightFields: function () {\n            this.addingNewWeight = true;\n            this.editingWeight = false;\n        },\n\n        /**\n         *\n         */\n        showEditWeightFields: function () {\n            this.editingWeight = true;\n            this.addingNewWeight = false;\n            setTimeout(function () {\n                $(\"#weight\").focus();\n            }, 500);\n        },\n\n        /**\n         *\n         */\n        getWeightForTheDay: function () {\n            $.event.trigger('show-loading');\n            this.$http.get('api/weights/' + this.date.sql).then(function (response) {\n                this.weight = response.data;\n                $.event.trigger('hide-loading');\n            }, function (response) {\n                HelpersRepository.handleResponseError(response);\n            });\n        },\n\n        /**\n         *\n         */\n        listen: function () {\n            var that = this;\n            $(document).on('get-entries', function (event) {\n                that.getWeightForTheDay();\n            });\n            $(document).on('date-changed', function (event) {\n                that.getWeightForTheDay();\n            });\n        },\n\n        /**\n         *\n         * @param response\n         */\n        handleResponseError: function (response) {\n            $.event.trigger('response-error', [response]);\n            this.showLoading = false;\n        }\n    },\n    props: [\n\n    ],\n    ready: function () {\n        $(\"#weight\").val(\"\");\n        this.getWeightForTheDay();\n        this.listen();\n    }\n};\n","\nvar Vue = require('vue');\nvar VueRouter = require('vue-router');\nVue.use(VueRouter);\nglobal.$ = require('jquery');\nglobal.jQuery = require('jquery');\nglobal._ = require('underscore');\nglobal.store = require('./repositories/SharedRepository');\nvar VueResource = require('vue-resource');\nVue.use(VueResource);\nrequire('./config.js');\nglobal.HelpersRepository = require('./repositories/HelpersRepository');\nglobal.FiltersRepository = require('./repositories/FiltersRepository');\nDate.setLocale('en-AU');\n\nvar App = Vue.component('app', {\n    ready: function () {\n        store.getExercises(this);\n        store.getExerciseUnits(this);\n        store.getExercisePrograms(this);\n    }\n});\n\n//Components\nVue.component('navbar', require('./components/exercises/NavbarComponent'));\nVue.component('feedback', require('./components/shared/FeedbackComponent'));\nVue.component('loading', require('./components/shared/LoadingComponent'));\nVue.component('date-navigation', require('./components/shared/DateNavigationComponent'));\nVue.component('autocomplete', require('./components/shared/AutocompleteComponent'));\n\n\nVue.component('weight', require('./components/WeightComponent'));\nVue.component('new-menu-entry', require('./components/menu/NewMenuEntryComponent'));\nVue.component('new-food-entry', require('./components/menu/NewFoodEntryComponent'));\nVue.component('menu-entries', require('./components/menu/MenuEntriesComponent'));\nVue.component('temporary-recipe-popup', require('./components/menu/TemporaryRecipePopupComponent'));\nVue.component('new-exercise', require('./components/exercises/NewExerciseComponent'));\nVue.component('new-exercise-entry', require('./components/exercises/NewExerciseEntryComponent'));\nVue.component('exercise-entries', require('./components/exercises/ExerciseEntriesComponent'));\nVue.component('entries-for-specific-exercise-and-date-and-unit-popup', require('./components/exercises/EntriesForSpecificExerciseAndDateAndUnitPopupComponent'));\nVue.component('series-history-popup', require('./components/exercises/SeriesHistoryPopupComponent'));\nVue.component('series-popup', require('./components/exercises/SeriesPopupComponent'));\nVue.component('new-series', require('./components/exercises/NewSeriesComponent'));\nVue.component('exercise-popup', require('./components/exercises/ExercisePopupComponent'));\nVue.component('new-sleep-entry', require('./components/NewSleepEntryComponent'));\n\nvar router = new VueRouter({\n    hashbang: false\n});\n\nrouter.map({\n    '/': {\n        component: require('./components/EntriesPageComponent'),\n//         //subRoutes: {\n//         //    //default for if no id is specified\n//         //    '/': {\n//         //        component: Item\n//         //    },\n//         //    '/:id': {\n//         //        component: Item\n//         //    }\n//         //}\n    },\n    '/entries': {\n        component: require('./components/EntriesPageComponent'),\n    },\n    '/exercises': {\n        component: require('./components/exercises/ExercisesPageComponent')\n    },\n    '/exercise-units': {\n        component: require('./components/exercises/ExerciseUnitsPageComponent')\n    },\n    '/foods': {\n        component: require('./components/menu/FoodsPageComponent')\n    },\n    '/recipes': {\n        component: require('./components/menu/RecipesPageComponent')\n    },\n    '/journal': {\n        component: require('./components/JournalPageComponent')\n    },\n    '/food-units': {\n        component: require('./components/menu/FoodUnitsPageComponent')\n    },\n    '/timers': {\n        component: require('./components/timers/TimersPageComponent'),\n        subRoutes: {\n            //'/': {\n            //    component: TimersPage\n            //},\n            '/new-manual': {\n                component: require('./components/timers/NewManualTimerComponent')\n            }\n        }\n    },\n    '/activities': {\n        component: require('./components/timers/ActivitiesPageComponent')\n    },\n    '/graphs': {\n        component: require('./components/timers/GraphsPageComponent')\n    },\n});\n\nrouter.start(App, 'body');\n\n\n\n\n"],"sourceRoot":"/source/"}